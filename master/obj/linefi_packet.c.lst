                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module linefi_packet
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _crc8_PARM_3
                                     12 	.globl _crc8_PARM_2
                                     13 	.globl _sht75_crc_table
                                     14 	.globl _getchar_uart1
                                     15 	.globl _putchar_uart1
                                     16 	.globl _printf_fast_f
                                     17 	.globl _MOSI
                                     18 	.globl _P00
                                     19 	.globl _MISO
                                     20 	.globl _P01
                                     21 	.globl _RXD_1
                                     22 	.globl _P02
                                     23 	.globl _P03
                                     24 	.globl _STADC
                                     25 	.globl _P04
                                     26 	.globl _P05
                                     27 	.globl _TXD
                                     28 	.globl _P06
                                     29 	.globl _RXD
                                     30 	.globl _P07
                                     31 	.globl _IT0
                                     32 	.globl _IE0
                                     33 	.globl _IT1
                                     34 	.globl _IE1
                                     35 	.globl _TR0
                                     36 	.globl _TF0
                                     37 	.globl _TR1
                                     38 	.globl _TF1
                                     39 	.globl _P10
                                     40 	.globl _P11
                                     41 	.globl _P12
                                     42 	.globl _SCL
                                     43 	.globl _P13
                                     44 	.globl _SDA
                                     45 	.globl _P14
                                     46 	.globl _P15
                                     47 	.globl _TXD_1
                                     48 	.globl _P16
                                     49 	.globl _P17
                                     50 	.globl _RI
                                     51 	.globl _TI
                                     52 	.globl _RB8
                                     53 	.globl _TB8
                                     54 	.globl _REN
                                     55 	.globl _SM2
                                     56 	.globl _SM1
                                     57 	.globl _FE
                                     58 	.globl _SM0
                                     59 	.globl _P20
                                     60 	.globl _EX0
                                     61 	.globl _ET0
                                     62 	.globl _EX1
                                     63 	.globl _ET1
                                     64 	.globl _ES
                                     65 	.globl _EBOD
                                     66 	.globl _EADC
                                     67 	.globl _EA
                                     68 	.globl _P30
                                     69 	.globl _PX0
                                     70 	.globl _PT0
                                     71 	.globl _PX1
                                     72 	.globl _PT1
                                     73 	.globl _PS
                                     74 	.globl _PBOD
                                     75 	.globl _PADC
                                     76 	.globl _I2CPX
                                     77 	.globl _AA
                                     78 	.globl _SI
                                     79 	.globl _STO
                                     80 	.globl _STA
                                     81 	.globl _I2CEN
                                     82 	.globl _CM_RL2
                                     83 	.globl _TR2
                                     84 	.globl _TF2
                                     85 	.globl _P
                                     86 	.globl _OV
                                     87 	.globl _RS0
                                     88 	.globl _RS1
                                     89 	.globl _F0
                                     90 	.globl _AC
                                     91 	.globl _CY
                                     92 	.globl _CLRPWM
                                     93 	.globl _PWMF
                                     94 	.globl _LOAD
                                     95 	.globl _PWMRUN
                                     96 	.globl _ADCHS0
                                     97 	.globl _ADCHS1
                                     98 	.globl _ADCHS2
                                     99 	.globl _ADCHS3
                                    100 	.globl _ETGSEL0
                                    101 	.globl _ETGSEL1
                                    102 	.globl _ADCS
                                    103 	.globl _ADCF
                                    104 	.globl _RI_1
                                    105 	.globl _TI_1
                                    106 	.globl _RB8_1
                                    107 	.globl _TB8_1
                                    108 	.globl _REN_1
                                    109 	.globl _SM2_1
                                    110 	.globl _SM1_1
                                    111 	.globl _FE_1
                                    112 	.globl _SM0_1
                                    113 	.globl _EIPH1
                                    114 	.globl _EIP1
                                    115 	.globl _PMD
                                    116 	.globl _PMEN
                                    117 	.globl _PDTCNT
                                    118 	.globl _PDTEN
                                    119 	.globl _SCON_1
                                    120 	.globl _EIPH
                                    121 	.globl _AINDIDS
                                    122 	.globl _SPDR
                                    123 	.globl _SPSR
                                    124 	.globl _SPCR2
                                    125 	.globl _SPCR
                                    126 	.globl _CAPCON4
                                    127 	.globl _CAPCON3
                                    128 	.globl _B
                                    129 	.globl _EIP
                                    130 	.globl _C2H
                                    131 	.globl _C2L
                                    132 	.globl _PIF
                                    133 	.globl _PIPEN
                                    134 	.globl _PINEN
                                    135 	.globl _PICON
                                    136 	.globl _ADCCON0
                                    137 	.globl _C1H
                                    138 	.globl _C1L
                                    139 	.globl _C0H
                                    140 	.globl _C0L
                                    141 	.globl _ADCDLY
                                    142 	.globl _ADCCON2
                                    143 	.globl _ADCCON1
                                    144 	.globl _ACC
                                    145 	.globl _PWMCON1
                                    146 	.globl _PIOCON0
                                    147 	.globl _PWM3L
                                    148 	.globl _PWM2L
                                    149 	.globl _PWM1L
                                    150 	.globl _PWM0L
                                    151 	.globl _PWMPL
                                    152 	.globl _PWMCON0
                                    153 	.globl _FBD
                                    154 	.globl _PNP
                                    155 	.globl _PWM3H
                                    156 	.globl _PWM2H
                                    157 	.globl _PWM1H
                                    158 	.globl _PWM0H
                                    159 	.globl _PWMPH
                                    160 	.globl _PSW
                                    161 	.globl _ADCMPH
                                    162 	.globl _ADCMPL
                                    163 	.globl _PWM5L
                                    164 	.globl _TH2
                                    165 	.globl _PWM4L
                                    166 	.globl _TL2
                                    167 	.globl _RCMP2H
                                    168 	.globl _RCMP2L
                                    169 	.globl _T2MOD
                                    170 	.globl _T2CON
                                    171 	.globl _TA
                                    172 	.globl _PIOCON1
                                    173 	.globl _RH3
                                    174 	.globl _PWM5H
                                    175 	.globl _RL3
                                    176 	.globl _PWM4H
                                    177 	.globl _T3CON
                                    178 	.globl _ADCRH
                                    179 	.globl _ADCRL
                                    180 	.globl _I2ADDR
                                    181 	.globl _I2CON
                                    182 	.globl _I2TOC
                                    183 	.globl _I2CLK
                                    184 	.globl _I2STAT
                                    185 	.globl _I2DAT
                                    186 	.globl _SADDR_1
                                    187 	.globl _SADEN_1
                                    188 	.globl _SADEN
                                    189 	.globl _IP
                                    190 	.globl _PWMINTC
                                    191 	.globl _IPH
                                    192 	.globl _P2S
                                    193 	.globl _P1SR
                                    194 	.globl _P1M2
                                    195 	.globl _P1S
                                    196 	.globl _P1M1
                                    197 	.globl _P0SR
                                    198 	.globl _P0M2
                                    199 	.globl _P0S
                                    200 	.globl _P0M1
                                    201 	.globl _P3
                                    202 	.globl _IAPCN
                                    203 	.globl _IAPFD
                                    204 	.globl _P3SR
                                    205 	.globl _P3M2
                                    206 	.globl _P3S
                                    207 	.globl _P3M1
                                    208 	.globl _BODCON1
                                    209 	.globl _WDCON
                                    210 	.globl _SADDR
                                    211 	.globl _IE
                                    212 	.globl _IAPAH
                                    213 	.globl _IAPAL
                                    214 	.globl _IAPUEN
                                    215 	.globl _IAPTRG
                                    216 	.globl _BODCON0
                                    217 	.globl _AUXR1
                                    218 	.globl _P2
                                    219 	.globl _CHPCON
                                    220 	.globl _EIE1
                                    221 	.globl _EIE
                                    222 	.globl _SBUF_1
                                    223 	.globl _SBUF
                                    224 	.globl _SCON
                                    225 	.globl _CKEN
                                    226 	.globl _CKSWT
                                    227 	.globl _CKDIV
                                    228 	.globl _CAPCON2
                                    229 	.globl _CAPCON1
                                    230 	.globl _CAPCON0
                                    231 	.globl _SFRS
                                    232 	.globl _P1
                                    233 	.globl _WKCON
                                    234 	.globl _CKCON
                                    235 	.globl _TH1
                                    236 	.globl _TH0
                                    237 	.globl _TL1
                                    238 	.globl _TL0
                                    239 	.globl _TMOD
                                    240 	.globl _TCON
                                    241 	.globl _PCON
                                    242 	.globl _RWK
                                    243 	.globl _RCTRIM1
                                    244 	.globl _RCTRIM0
                                    245 	.globl _DPH
                                    246 	.globl _DPL
                                    247 	.globl _SP
                                    248 	.globl _P0
                                    249 	.globl _gpcTypeStr
                                    250 	.globl _print_raw_packet_PARM_2
                                    251 	.globl _cp_buf2linefipacket_PARM_3
                                    252 	.globl _cp_buf2linefipacket_PARM_2
                                    253 	.globl _gu16Cnt
                                    254 	.globl _size_linefi_packet
                                    255 	.globl _calc_crc_linefi_packet_packet
                                    256 	.globl _add_crc_linefi_packet_packet
                                    257 	.globl _chk_crc_linefi_packet_packet
                                    258 	.globl _get_octet_from_linefi
                                    259 	.globl _send_octet_to_linefi
                                    260 	.globl _send_linefi_packet
                                    261 	.globl _cp_buf2linefipacket
                                    262 	.globl _print_linefipacket
                                    263 	.globl _crc8
                                    264 	.globl _print_raw_packet
                                    265 ;--------------------------------------------------------
                                    266 ; special function registers
                                    267 ;--------------------------------------------------------
                                    268 	.area RSEG    (ABS,DATA)
      000000                        269 	.org 0x0000
                           000080   270 _P0	=	0x0080
                           000081   271 _SP	=	0x0081
                           000082   272 _DPL	=	0x0082
                           000083   273 _DPH	=	0x0083
                           000084   274 _RCTRIM0	=	0x0084
                           000085   275 _RCTRIM1	=	0x0085
                           000086   276 _RWK	=	0x0086
                           000087   277 _PCON	=	0x0087
                           000088   278 _TCON	=	0x0088
                           000089   279 _TMOD	=	0x0089
                           00008A   280 _TL0	=	0x008a
                           00008B   281 _TL1	=	0x008b
                           00008C   282 _TH0	=	0x008c
                           00008D   283 _TH1	=	0x008d
                           00008E   284 _CKCON	=	0x008e
                           00008F   285 _WKCON	=	0x008f
                           000090   286 _P1	=	0x0090
                           000091   287 _SFRS	=	0x0091
                           000092   288 _CAPCON0	=	0x0092
                           000093   289 _CAPCON1	=	0x0093
                           000094   290 _CAPCON2	=	0x0094
                           000095   291 _CKDIV	=	0x0095
                           000096   292 _CKSWT	=	0x0096
                           000097   293 _CKEN	=	0x0097
                           000098   294 _SCON	=	0x0098
                           000099   295 _SBUF	=	0x0099
                           00009A   296 _SBUF_1	=	0x009a
                           00009B   297 _EIE	=	0x009b
                           00009C   298 _EIE1	=	0x009c
                           00009F   299 _CHPCON	=	0x009f
                           0000A0   300 _P2	=	0x00a0
                           0000A2   301 _AUXR1	=	0x00a2
                           0000A3   302 _BODCON0	=	0x00a3
                           0000A4   303 _IAPTRG	=	0x00a4
                           0000A5   304 _IAPUEN	=	0x00a5
                           0000A6   305 _IAPAL	=	0x00a6
                           0000A7   306 _IAPAH	=	0x00a7
                           0000A8   307 _IE	=	0x00a8
                           0000A9   308 _SADDR	=	0x00a9
                           0000AA   309 _WDCON	=	0x00aa
                           0000AB   310 _BODCON1	=	0x00ab
                           0000AC   311 _P3M1	=	0x00ac
                           0000AC   312 _P3S	=	0x00ac
                           0000AD   313 _P3M2	=	0x00ad
                           0000AD   314 _P3SR	=	0x00ad
                           0000AE   315 _IAPFD	=	0x00ae
                           0000AF   316 _IAPCN	=	0x00af
                           0000B0   317 _P3	=	0x00b0
                           0000B1   318 _P0M1	=	0x00b1
                           0000B1   319 _P0S	=	0x00b1
                           0000B2   320 _P0M2	=	0x00b2
                           0000B2   321 _P0SR	=	0x00b2
                           0000B3   322 _P1M1	=	0x00b3
                           0000B3   323 _P1S	=	0x00b3
                           0000B4   324 _P1M2	=	0x00b4
                           0000B4   325 _P1SR	=	0x00b4
                           0000B5   326 _P2S	=	0x00b5
                           0000B7   327 _IPH	=	0x00b7
                           0000B7   328 _PWMINTC	=	0x00b7
                           0000B8   329 _IP	=	0x00b8
                           0000B9   330 _SADEN	=	0x00b9
                           0000BA   331 _SADEN_1	=	0x00ba
                           0000BB   332 _SADDR_1	=	0x00bb
                           0000BC   333 _I2DAT	=	0x00bc
                           0000BD   334 _I2STAT	=	0x00bd
                           0000BE   335 _I2CLK	=	0x00be
                           0000BF   336 _I2TOC	=	0x00bf
                           0000C0   337 _I2CON	=	0x00c0
                           0000C1   338 _I2ADDR	=	0x00c1
                           0000C2   339 _ADCRL	=	0x00c2
                           0000C3   340 _ADCRH	=	0x00c3
                           0000C4   341 _T3CON	=	0x00c4
                           0000C4   342 _PWM4H	=	0x00c4
                           0000C5   343 _RL3	=	0x00c5
                           0000C5   344 _PWM5H	=	0x00c5
                           0000C6   345 _RH3	=	0x00c6
                           0000C6   346 _PIOCON1	=	0x00c6
                           0000C7   347 _TA	=	0x00c7
                           0000C8   348 _T2CON	=	0x00c8
                           0000C9   349 _T2MOD	=	0x00c9
                           0000CA   350 _RCMP2L	=	0x00ca
                           0000CB   351 _RCMP2H	=	0x00cb
                           0000CC   352 _TL2	=	0x00cc
                           0000CC   353 _PWM4L	=	0x00cc
                           0000CD   354 _TH2	=	0x00cd
                           0000CD   355 _PWM5L	=	0x00cd
                           0000CE   356 _ADCMPL	=	0x00ce
                           0000CF   357 _ADCMPH	=	0x00cf
                           0000D0   358 _PSW	=	0x00d0
                           0000D1   359 _PWMPH	=	0x00d1
                           0000D2   360 _PWM0H	=	0x00d2
                           0000D3   361 _PWM1H	=	0x00d3
                           0000D4   362 _PWM2H	=	0x00d4
                           0000D5   363 _PWM3H	=	0x00d5
                           0000D6   364 _PNP	=	0x00d6
                           0000D7   365 _FBD	=	0x00d7
                           0000D8   366 _PWMCON0	=	0x00d8
                           0000D9   367 _PWMPL	=	0x00d9
                           0000DA   368 _PWM0L	=	0x00da
                           0000DB   369 _PWM1L	=	0x00db
                           0000DC   370 _PWM2L	=	0x00dc
                           0000DD   371 _PWM3L	=	0x00dd
                           0000DE   372 _PIOCON0	=	0x00de
                           0000DF   373 _PWMCON1	=	0x00df
                           0000E0   374 _ACC	=	0x00e0
                           0000E1   375 _ADCCON1	=	0x00e1
                           0000E2   376 _ADCCON2	=	0x00e2
                           0000E3   377 _ADCDLY	=	0x00e3
                           0000E4   378 _C0L	=	0x00e4
                           0000E5   379 _C0H	=	0x00e5
                           0000E6   380 _C1L	=	0x00e6
                           0000E7   381 _C1H	=	0x00e7
                           0000E8   382 _ADCCON0	=	0x00e8
                           0000E9   383 _PICON	=	0x00e9
                           0000EA   384 _PINEN	=	0x00ea
                           0000EB   385 _PIPEN	=	0x00eb
                           0000EC   386 _PIF	=	0x00ec
                           0000ED   387 _C2L	=	0x00ed
                           0000EE   388 _C2H	=	0x00ee
                           0000EF   389 _EIP	=	0x00ef
                           0000F0   390 _B	=	0x00f0
                           0000F1   391 _CAPCON3	=	0x00f1
                           0000F2   392 _CAPCON4	=	0x00f2
                           0000F3   393 _SPCR	=	0x00f3
                           0000F3   394 _SPCR2	=	0x00f3
                           0000F4   395 _SPSR	=	0x00f4
                           0000F5   396 _SPDR	=	0x00f5
                           0000F6   397 _AINDIDS	=	0x00f6
                           0000F7   398 _EIPH	=	0x00f7
                           0000F8   399 _SCON_1	=	0x00f8
                           0000F9   400 _PDTEN	=	0x00f9
                           0000FA   401 _PDTCNT	=	0x00fa
                           0000FB   402 _PMEN	=	0x00fb
                           0000FC   403 _PMD	=	0x00fc
                           0000FE   404 _EIP1	=	0x00fe
                           0000FF   405 _EIPH1	=	0x00ff
                                    406 ;--------------------------------------------------------
                                    407 ; special function bits
                                    408 ;--------------------------------------------------------
                                    409 	.area RSEG    (ABS,DATA)
      000000                        410 	.org 0x0000
                           0000FF   411 _SM0_1	=	0x00ff
                           0000FF   412 _FE_1	=	0x00ff
                           0000FE   413 _SM1_1	=	0x00fe
                           0000FD   414 _SM2_1	=	0x00fd
                           0000FC   415 _REN_1	=	0x00fc
                           0000FB   416 _TB8_1	=	0x00fb
                           0000FA   417 _RB8_1	=	0x00fa
                           0000F9   418 _TI_1	=	0x00f9
                           0000F8   419 _RI_1	=	0x00f8
                           0000EF   420 _ADCF	=	0x00ef
                           0000EE   421 _ADCS	=	0x00ee
                           0000ED   422 _ETGSEL1	=	0x00ed
                           0000EC   423 _ETGSEL0	=	0x00ec
                           0000EB   424 _ADCHS3	=	0x00eb
                           0000EA   425 _ADCHS2	=	0x00ea
                           0000E9   426 _ADCHS1	=	0x00e9
                           0000E8   427 _ADCHS0	=	0x00e8
                           0000DF   428 _PWMRUN	=	0x00df
                           0000DE   429 _LOAD	=	0x00de
                           0000DD   430 _PWMF	=	0x00dd
                           0000DC   431 _CLRPWM	=	0x00dc
                           0000D7   432 _CY	=	0x00d7
                           0000D6   433 _AC	=	0x00d6
                           0000D5   434 _F0	=	0x00d5
                           0000D4   435 _RS1	=	0x00d4
                           0000D3   436 _RS0	=	0x00d3
                           0000D2   437 _OV	=	0x00d2
                           0000D0   438 _P	=	0x00d0
                           0000CF   439 _TF2	=	0x00cf
                           0000CA   440 _TR2	=	0x00ca
                           0000C8   441 _CM_RL2	=	0x00c8
                           0000C6   442 _I2CEN	=	0x00c6
                           0000C5   443 _STA	=	0x00c5
                           0000C4   444 _STO	=	0x00c4
                           0000C3   445 _SI	=	0x00c3
                           0000C2   446 _AA	=	0x00c2
                           0000C0   447 _I2CPX	=	0x00c0
                           0000BE   448 _PADC	=	0x00be
                           0000BD   449 _PBOD	=	0x00bd
                           0000BC   450 _PS	=	0x00bc
                           0000BB   451 _PT1	=	0x00bb
                           0000BA   452 _PX1	=	0x00ba
                           0000B9   453 _PT0	=	0x00b9
                           0000B8   454 _PX0	=	0x00b8
                           0000B0   455 _P30	=	0x00b0
                           0000AF   456 _EA	=	0x00af
                           0000AE   457 _EADC	=	0x00ae
                           0000AD   458 _EBOD	=	0x00ad
                           0000AC   459 _ES	=	0x00ac
                           0000AB   460 _ET1	=	0x00ab
                           0000AA   461 _EX1	=	0x00aa
                           0000A9   462 _ET0	=	0x00a9
                           0000A8   463 _EX0	=	0x00a8
                           0000A0   464 _P20	=	0x00a0
                           00009F   465 _SM0	=	0x009f
                           00009F   466 _FE	=	0x009f
                           00009E   467 _SM1	=	0x009e
                           00009D   468 _SM2	=	0x009d
                           00009C   469 _REN	=	0x009c
                           00009B   470 _TB8	=	0x009b
                           00009A   471 _RB8	=	0x009a
                           000099   472 _TI	=	0x0099
                           000098   473 _RI	=	0x0098
                           000097   474 _P17	=	0x0097
                           000096   475 _P16	=	0x0096
                           000096   476 _TXD_1	=	0x0096
                           000095   477 _P15	=	0x0095
                           000094   478 _P14	=	0x0094
                           000094   479 _SDA	=	0x0094
                           000093   480 _P13	=	0x0093
                           000093   481 _SCL	=	0x0093
                           000092   482 _P12	=	0x0092
                           000091   483 _P11	=	0x0091
                           000090   484 _P10	=	0x0090
                           00008F   485 _TF1	=	0x008f
                           00008E   486 _TR1	=	0x008e
                           00008D   487 _TF0	=	0x008d
                           00008C   488 _TR0	=	0x008c
                           00008B   489 _IE1	=	0x008b
                           00008A   490 _IT1	=	0x008a
                           000089   491 _IE0	=	0x0089
                           000088   492 _IT0	=	0x0088
                           000087   493 _P07	=	0x0087
                           000087   494 _RXD	=	0x0087
                           000086   495 _P06	=	0x0086
                           000086   496 _TXD	=	0x0086
                           000085   497 _P05	=	0x0085
                           000084   498 _P04	=	0x0084
                           000084   499 _STADC	=	0x0084
                           000083   500 _P03	=	0x0083
                           000082   501 _P02	=	0x0082
                           000082   502 _RXD_1	=	0x0082
                           000081   503 _P01	=	0x0081
                           000081   504 _MISO	=	0x0081
                           000080   505 _P00	=	0x0080
                           000080   506 _MOSI	=	0x0080
                                    507 ;--------------------------------------------------------
                                    508 ; overlayable register banks
                                    509 ;--------------------------------------------------------
                                    510 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        511 	.ds 8
                                    512 ;--------------------------------------------------------
                                    513 ; internal ram data
                                    514 ;--------------------------------------------------------
                                    515 	.area DSEG    (DATA)
      000000                        516 _gu16Cnt::
      000000                        517 	.ds 2
      000002                        518 _cp_buf2linefipacket_PARM_2:
      000002                        519 	.ds 3
      000005                        520 _cp_buf2linefipacket_PARM_3:
      000005                        521 	.ds 3
      000008                        522 _cp_buf2linefipacket_i_65538_73:
      000008                        523 	.ds 1
      000009                        524 _cp_buf2linefipacket_sloc0_1_0:
      000009                        525 	.ds 3
      00000C                        526 _print_linefipacket_i_65537_79:
      00000C                        527 	.ds 1
      00000D                        528 _print_raw_packet_PARM_2:
      00000D                        529 	.ds 3
                                    530 ;--------------------------------------------------------
                                    531 ; overlayable items in internal ram 
                                    532 ;--------------------------------------------------------
                                    533 	.area	OSEG    (OVR,DATA)
                                    534 	.area	OSEG    (OVR,DATA)
      000000                        535 _crc8_PARM_2:
      000000                        536 	.ds 1
      000001                        537 _crc8_PARM_3:
      000001                        538 	.ds 1
                                    539 ;--------------------------------------------------------
                                    540 ; indirectly addressable internal ram data
                                    541 ;--------------------------------------------------------
                                    542 	.area ISEG    (DATA)
                                    543 ;--------------------------------------------------------
                                    544 ; absolute internal ram data
                                    545 ;--------------------------------------------------------
                                    546 	.area IABS    (ABS,DATA)
                                    547 	.area IABS    (ABS,DATA)
                                    548 ;--------------------------------------------------------
                                    549 ; bit data
                                    550 ;--------------------------------------------------------
                                    551 	.area BSEG    (BIT)
                                    552 ;--------------------------------------------------------
                                    553 ; paged external ram data
                                    554 ;--------------------------------------------------------
                                    555 	.area PSEG    (PAG,XDATA)
                                    556 ;--------------------------------------------------------
                                    557 ; external ram data
                                    558 ;--------------------------------------------------------
                                    559 	.area XSEG    (XDATA)
      000000                        560 _gpcTypeStr::
      000000                        561 	.ds 84
                                    562 ;--------------------------------------------------------
                                    563 ; absolute external ram data
                                    564 ;--------------------------------------------------------
                                    565 	.area XABS    (ABS,XDATA)
                                    566 ;--------------------------------------------------------
                                    567 ; external initialized ram data
                                    568 ;--------------------------------------------------------
                                    569 	.area HOME    (CODE)
                                    570 	.area GSINIT0 (CODE)
                                    571 	.area GSINIT1 (CODE)
                                    572 	.area GSINIT2 (CODE)
                                    573 	.area GSINIT3 (CODE)
                                    574 	.area GSINIT4 (CODE)
                                    575 	.area GSINIT5 (CODE)
                                    576 	.area GSINIT  (CODE)
                                    577 	.area GSFINAL (CODE)
                                    578 	.area CSEG    (CODE)
                                    579 ;--------------------------------------------------------
                                    580 ; global & static initialisations
                                    581 ;--------------------------------------------------------
                                    582 	.area HOME    (CODE)
                                    583 	.area GSINIT  (CODE)
                                    584 	.area GSFINAL (CODE)
                                    585 	.area GSINIT  (CODE)
                                    586 ;	../lib_master/linefi_packet.c:15: uint16 gu16Cnt = 0;
      000000 E4               [12]  587 	clr	a
      000001 F5*00            [12]  588 	mov	_gu16Cnt,a
      000003 F5*01            [12]  589 	mov	(_gu16Cnt + 1),a
                                    590 ;	../lib_master/linefi_packet.c:17: const char * __xdata gpcTypeStr[] = {
      000005 90r00r00         [24]  591 	mov	dptr,#_gpcTypeStr
      000008 74r98            [12]  592 	mov	a,#___str_14
      00000A F0               [24]  593 	movx	@dptr,a
      00000B 74s00            [12]  594 	mov	a,#(___str_14 >> 8)
      00000D A3               [24]  595 	inc	dptr
      00000E F0               [24]  596 	movx	@dptr,a
      00000F 74 80            [12]  597 	mov	a,#0x80
      000011 A3               [24]  598 	inc	dptr
      000012 F0               [24]  599 	movx	@dptr,a
      000013 90r00r03         [24]  600 	mov	dptr,#(_gpcTypeStr + 0x0003)
      000016 74rA3            [12]  601 	mov	a,#___str_15
      000018 F0               [24]  602 	movx	@dptr,a
      000019 74s00            [12]  603 	mov	a,#(___str_15 >> 8)
      00001B A3               [24]  604 	inc	dptr
      00001C F0               [24]  605 	movx	@dptr,a
      00001D 74 80            [12]  606 	mov	a,#0x80
      00001F A3               [24]  607 	inc	dptr
      000020 F0               [24]  608 	movx	@dptr,a
      000021 90r00r06         [24]  609 	mov	dptr,#(_gpcTypeStr + 0x0006)
      000024 74rAE            [12]  610 	mov	a,#___str_16
      000026 F0               [24]  611 	movx	@dptr,a
      000027 74s00            [12]  612 	mov	a,#(___str_16 >> 8)
      000029 A3               [24]  613 	inc	dptr
      00002A F0               [24]  614 	movx	@dptr,a
      00002B 74 80            [12]  615 	mov	a,#0x80
      00002D A3               [24]  616 	inc	dptr
      00002E F0               [24]  617 	movx	@dptr,a
      00002F 90r00r09         [24]  618 	mov	dptr,#(_gpcTypeStr + 0x0009)
      000032 74rB9            [12]  619 	mov	a,#___str_17
      000034 F0               [24]  620 	movx	@dptr,a
      000035 74s00            [12]  621 	mov	a,#(___str_17 >> 8)
      000037 A3               [24]  622 	inc	dptr
      000038 F0               [24]  623 	movx	@dptr,a
      000039 74 80            [12]  624 	mov	a,#0x80
      00003B A3               [24]  625 	inc	dptr
      00003C F0               [24]  626 	movx	@dptr,a
      00003D 90r00r0C         [24]  627 	mov	dptr,#(_gpcTypeStr + 0x000c)
      000040 74rC6            [12]  628 	mov	a,#___str_18
      000042 F0               [24]  629 	movx	@dptr,a
      000043 74s00            [12]  630 	mov	a,#(___str_18 >> 8)
      000045 A3               [24]  631 	inc	dptr
      000046 F0               [24]  632 	movx	@dptr,a
      000047 74 80            [12]  633 	mov	a,#0x80
      000049 A3               [24]  634 	inc	dptr
      00004A F0               [24]  635 	movx	@dptr,a
      00004B 90r00r0F         [24]  636 	mov	dptr,#(_gpcTypeStr + 0x000f)
      00004E 74rD2            [12]  637 	mov	a,#___str_19
      000050 F0               [24]  638 	movx	@dptr,a
      000051 74s00            [12]  639 	mov	a,#(___str_19 >> 8)
      000053 A3               [24]  640 	inc	dptr
      000054 F0               [24]  641 	movx	@dptr,a
      000055 74 80            [12]  642 	mov	a,#0x80
      000057 A3               [24]  643 	inc	dptr
      000058 F0               [24]  644 	movx	@dptr,a
      000059 90r00r12         [24]  645 	mov	dptr,#(_gpcTypeStr + 0x0012)
      00005C 74rE1            [12]  646 	mov	a,#___str_20
      00005E F0               [24]  647 	movx	@dptr,a
      00005F 74s00            [12]  648 	mov	a,#(___str_20 >> 8)
      000061 A3               [24]  649 	inc	dptr
      000062 F0               [24]  650 	movx	@dptr,a
      000063 74 80            [12]  651 	mov	a,#0x80
      000065 A3               [24]  652 	inc	dptr
      000066 F0               [24]  653 	movx	@dptr,a
      000067 90r00r15         [24]  654 	mov	dptr,#(_gpcTypeStr + 0x0015)
      00006A 74rEF            [12]  655 	mov	a,#___str_21
      00006C F0               [24]  656 	movx	@dptr,a
      00006D 74s00            [12]  657 	mov	a,#(___str_21 >> 8)
      00006F A3               [24]  658 	inc	dptr
      000070 F0               [24]  659 	movx	@dptr,a
      000071 74 80            [12]  660 	mov	a,#0x80
      000073 A3               [24]  661 	inc	dptr
      000074 F0               [24]  662 	movx	@dptr,a
      000075 90r00r18         [24]  663 	mov	dptr,#(_gpcTypeStr + 0x0018)
      000078 74rF8            [12]  664 	mov	a,#___str_22
      00007A F0               [24]  665 	movx	@dptr,a
      00007B 74s00            [12]  666 	mov	a,#(___str_22 >> 8)
      00007D A3               [24]  667 	inc	dptr
      00007E F0               [24]  668 	movx	@dptr,a
      00007F 74 80            [12]  669 	mov	a,#0x80
      000081 A3               [24]  670 	inc	dptr
      000082 F0               [24]  671 	movx	@dptr,a
      000083 90r00r1B         [24]  672 	mov	dptr,#(_gpcTypeStr + 0x001b)
      000086 74rF8            [12]  673 	mov	a,#___str_22
      000088 F0               [24]  674 	movx	@dptr,a
      000089 74s00            [12]  675 	mov	a,#(___str_22 >> 8)
      00008B A3               [24]  676 	inc	dptr
      00008C F0               [24]  677 	movx	@dptr,a
      00008D 74 80            [12]  678 	mov	a,#0x80
      00008F A3               [24]  679 	inc	dptr
      000090 F0               [24]  680 	movx	@dptr,a
      000091 90r00r1E         [24]  681 	mov	dptr,#(_gpcTypeStr + 0x001e)
      000094 74rF8            [12]  682 	mov	a,#___str_22
      000096 F0               [24]  683 	movx	@dptr,a
      000097 74s00            [12]  684 	mov	a,#(___str_22 >> 8)
      000099 A3               [24]  685 	inc	dptr
      00009A F0               [24]  686 	movx	@dptr,a
      00009B 74 80            [12]  687 	mov	a,#0x80
      00009D A3               [24]  688 	inc	dptr
      00009E F0               [24]  689 	movx	@dptr,a
      00009F 90r00r21         [24]  690 	mov	dptr,#(_gpcTypeStr + 0x0021)
      0000A2 74rF8            [12]  691 	mov	a,#___str_22
      0000A4 F0               [24]  692 	movx	@dptr,a
      0000A5 74s00            [12]  693 	mov	a,#(___str_22 >> 8)
      0000A7 A3               [24]  694 	inc	dptr
      0000A8 F0               [24]  695 	movx	@dptr,a
      0000A9 74 80            [12]  696 	mov	a,#0x80
      0000AB A3               [24]  697 	inc	dptr
      0000AC F0               [24]  698 	movx	@dptr,a
      0000AD 90r00r24         [24]  699 	mov	dptr,#(_gpcTypeStr + 0x0024)
      0000B0 74rF8            [12]  700 	mov	a,#___str_22
      0000B2 F0               [24]  701 	movx	@dptr,a
      0000B3 74s00            [12]  702 	mov	a,#(___str_22 >> 8)
      0000B5 A3               [24]  703 	inc	dptr
      0000B6 F0               [24]  704 	movx	@dptr,a
      0000B7 74 80            [12]  705 	mov	a,#0x80
      0000B9 A3               [24]  706 	inc	dptr
      0000BA F0               [24]  707 	movx	@dptr,a
      0000BB 90r00r27         [24]  708 	mov	dptr,#(_gpcTypeStr + 0x0027)
      0000BE 74rF8            [12]  709 	mov	a,#___str_22
      0000C0 F0               [24]  710 	movx	@dptr,a
      0000C1 74s00            [12]  711 	mov	a,#(___str_22 >> 8)
      0000C3 A3               [24]  712 	inc	dptr
      0000C4 F0               [24]  713 	movx	@dptr,a
      0000C5 74 80            [12]  714 	mov	a,#0x80
      0000C7 A3               [24]  715 	inc	dptr
      0000C8 F0               [24]  716 	movx	@dptr,a
      0000C9 90r00r2A         [24]  717 	mov	dptr,#(_gpcTypeStr + 0x002a)
      0000CC 74rF8            [12]  718 	mov	a,#___str_22
      0000CE F0               [24]  719 	movx	@dptr,a
      0000CF 74s00            [12]  720 	mov	a,#(___str_22 >> 8)
      0000D1 A3               [24]  721 	inc	dptr
      0000D2 F0               [24]  722 	movx	@dptr,a
      0000D3 74 80            [12]  723 	mov	a,#0x80
      0000D5 A3               [24]  724 	inc	dptr
      0000D6 F0               [24]  725 	movx	@dptr,a
      0000D7 90r00r2D         [24]  726 	mov	dptr,#(_gpcTypeStr + 0x002d)
      0000DA 74rF8            [12]  727 	mov	a,#___str_22
      0000DC F0               [24]  728 	movx	@dptr,a
      0000DD 74s00            [12]  729 	mov	a,#(___str_22 >> 8)
      0000DF A3               [24]  730 	inc	dptr
      0000E0 F0               [24]  731 	movx	@dptr,a
      0000E1 74 80            [12]  732 	mov	a,#0x80
      0000E3 A3               [24]  733 	inc	dptr
      0000E4 F0               [24]  734 	movx	@dptr,a
      0000E5 90r00r30         [24]  735 	mov	dptr,#(_gpcTypeStr + 0x0030)
      0000E8 74rF8            [12]  736 	mov	a,#___str_22
      0000EA F0               [24]  737 	movx	@dptr,a
      0000EB 74s00            [12]  738 	mov	a,#(___str_22 >> 8)
      0000ED A3               [24]  739 	inc	dptr
      0000EE F0               [24]  740 	movx	@dptr,a
      0000EF 74 80            [12]  741 	mov	a,#0x80
      0000F1 A3               [24]  742 	inc	dptr
      0000F2 F0               [24]  743 	movx	@dptr,a
      0000F3 90r00r33         [24]  744 	mov	dptr,#(_gpcTypeStr + 0x0033)
      0000F6 74rF8            [12]  745 	mov	a,#___str_22
      0000F8 F0               [24]  746 	movx	@dptr,a
      0000F9 74s00            [12]  747 	mov	a,#(___str_22 >> 8)
      0000FB A3               [24]  748 	inc	dptr
      0000FC F0               [24]  749 	movx	@dptr,a
      0000FD 74 80            [12]  750 	mov	a,#0x80
      0000FF A3               [24]  751 	inc	dptr
      000100 F0               [24]  752 	movx	@dptr,a
      000101 90r00r36         [24]  753 	mov	dptr,#(_gpcTypeStr + 0x0036)
      000104 74rF8            [12]  754 	mov	a,#___str_22
      000106 F0               [24]  755 	movx	@dptr,a
      000107 74s00            [12]  756 	mov	a,#(___str_22 >> 8)
      000109 A3               [24]  757 	inc	dptr
      00010A F0               [24]  758 	movx	@dptr,a
      00010B 74 80            [12]  759 	mov	a,#0x80
      00010D A3               [24]  760 	inc	dptr
      00010E F0               [24]  761 	movx	@dptr,a
      00010F 90r00r39         [24]  762 	mov	dptr,#(_gpcTypeStr + 0x0039)
      000112 74rF8            [12]  763 	mov	a,#___str_22
      000114 F0               [24]  764 	movx	@dptr,a
      000115 74s00            [12]  765 	mov	a,#(___str_22 >> 8)
      000117 A3               [24]  766 	inc	dptr
      000118 F0               [24]  767 	movx	@dptr,a
      000119 74 80            [12]  768 	mov	a,#0x80
      00011B A3               [24]  769 	inc	dptr
      00011C F0               [24]  770 	movx	@dptr,a
      00011D 90r00r3C         [24]  771 	mov	dptr,#(_gpcTypeStr + 0x003c)
      000120 74rF8            [12]  772 	mov	a,#___str_22
      000122 F0               [24]  773 	movx	@dptr,a
      000123 74s00            [12]  774 	mov	a,#(___str_22 >> 8)
      000125 A3               [24]  775 	inc	dptr
      000126 F0               [24]  776 	movx	@dptr,a
      000127 74 80            [12]  777 	mov	a,#0x80
      000129 A3               [24]  778 	inc	dptr
      00012A F0               [24]  779 	movx	@dptr,a
      00012B 90r00r3F         [24]  780 	mov	dptr,#(_gpcTypeStr + 0x003f)
      00012E 74rF8            [12]  781 	mov	a,#___str_22
      000130 F0               [24]  782 	movx	@dptr,a
      000131 74s00            [12]  783 	mov	a,#(___str_22 >> 8)
      000133 A3               [24]  784 	inc	dptr
      000134 F0               [24]  785 	movx	@dptr,a
      000135 74 80            [12]  786 	mov	a,#0x80
      000137 A3               [24]  787 	inc	dptr
      000138 F0               [24]  788 	movx	@dptr,a
      000139 90r00r42         [24]  789 	mov	dptr,#(_gpcTypeStr + 0x0042)
      00013C 74rF8            [12]  790 	mov	a,#___str_22
      00013E F0               [24]  791 	movx	@dptr,a
      00013F 74s00            [12]  792 	mov	a,#(___str_22 >> 8)
      000141 A3               [24]  793 	inc	dptr
      000142 F0               [24]  794 	movx	@dptr,a
      000143 74 80            [12]  795 	mov	a,#0x80
      000145 A3               [24]  796 	inc	dptr
      000146 F0               [24]  797 	movx	@dptr,a
      000147 90r00r45         [24]  798 	mov	dptr,#(_gpcTypeStr + 0x0045)
      00014A 74rF8            [12]  799 	mov	a,#___str_22
      00014C F0               [24]  800 	movx	@dptr,a
      00014D 74s00            [12]  801 	mov	a,#(___str_22 >> 8)
      00014F A3               [24]  802 	inc	dptr
      000150 F0               [24]  803 	movx	@dptr,a
      000151 74 80            [12]  804 	mov	a,#0x80
      000153 A3               [24]  805 	inc	dptr
      000154 F0               [24]  806 	movx	@dptr,a
      000155 90r00r48         [24]  807 	mov	dptr,#(_gpcTypeStr + 0x0048)
      000158 74rF8            [12]  808 	mov	a,#___str_22
      00015A F0               [24]  809 	movx	@dptr,a
      00015B 74s00            [12]  810 	mov	a,#(___str_22 >> 8)
      00015D A3               [24]  811 	inc	dptr
      00015E F0               [24]  812 	movx	@dptr,a
      00015F 74 80            [12]  813 	mov	a,#0x80
      000161 A3               [24]  814 	inc	dptr
      000162 F0               [24]  815 	movx	@dptr,a
      000163 90r00r4B         [24]  816 	mov	dptr,#(_gpcTypeStr + 0x004b)
      000166 74rF8            [12]  817 	mov	a,#___str_22
      000168 F0               [24]  818 	movx	@dptr,a
      000169 74s00            [12]  819 	mov	a,#(___str_22 >> 8)
      00016B A3               [24]  820 	inc	dptr
      00016C F0               [24]  821 	movx	@dptr,a
      00016D 74 80            [12]  822 	mov	a,#0x80
      00016F A3               [24]  823 	inc	dptr
      000170 F0               [24]  824 	movx	@dptr,a
      000171 90r00r4E         [24]  825 	mov	dptr,#(_gpcTypeStr + 0x004e)
      000174 74rF8            [12]  826 	mov	a,#___str_22
      000176 F0               [24]  827 	movx	@dptr,a
      000177 74s00            [12]  828 	mov	a,#(___str_22 >> 8)
      000179 A3               [24]  829 	inc	dptr
      00017A F0               [24]  830 	movx	@dptr,a
      00017B 74 80            [12]  831 	mov	a,#0x80
      00017D A3               [24]  832 	inc	dptr
      00017E F0               [24]  833 	movx	@dptr,a
      00017F 90r00r51         [24]  834 	mov	dptr,#(_gpcTypeStr + 0x0051)
      000182 74rF8            [12]  835 	mov	a,#___str_22
      000184 F0               [24]  836 	movx	@dptr,a
      000185 74s00            [12]  837 	mov	a,#(___str_22 >> 8)
      000187 A3               [24]  838 	inc	dptr
      000188 F0               [24]  839 	movx	@dptr,a
      000189 74 80            [12]  840 	mov	a,#0x80
      00018B A3               [24]  841 	inc	dptr
      00018C F0               [24]  842 	movx	@dptr,a
                                    843 ;--------------------------------------------------------
                                    844 ; Home
                                    845 ;--------------------------------------------------------
                                    846 	.area HOME    (CODE)
                                    847 	.area HOME    (CODE)
                                    848 ;--------------------------------------------------------
                                    849 ; code
                                    850 ;--------------------------------------------------------
                                    851 	.area CSEG    (CODE)
                                    852 ;------------------------------------------------------------
                                    853 ;Allocation info for local variables in function 'size_linefi_packet'
                                    854 ;------------------------------------------------------------
                                    855 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    856 ;------------------------------------------------------------
                                    857 ;	../lib_master/linefi_packet.c:48: uint8 size_linefi_packet(linefi_packet_t * apstLineFiPkt)
                                    858 ;	-----------------------------------------
                                    859 ;	 function size_linefi_packet
                                    860 ;	-----------------------------------------
      000000                        861 _size_linefi_packet:
                           000007   862 	ar7 = 0x07
                           000006   863 	ar6 = 0x06
                           000005   864 	ar5 = 0x05
                           000004   865 	ar4 = 0x04
                           000003   866 	ar3 = 0x03
                           000002   867 	ar2 = 0x02
                           000001   868 	ar1 = 0x01
                           000000   869 	ar0 = 0x00
      000000 AD 82            [24]  870 	mov	r5,dpl
      000002 AE 83            [24]  871 	mov	r6,dph
      000004 AF F0            [24]  872 	mov	r7,b
                                    873 ;	../lib_master/linefi_packet.c:50: return apstLineFiPkt->u8Size + sizeof(linefi_packet_t) - sizeof(uint8 *);
      000006 74 03            [12]  874 	mov	a,#0x03
      000008 2D               [12]  875 	add	a,r5
      000009 FD               [12]  876 	mov	r5,a
      00000A E4               [12]  877 	clr	a
      00000B 3E               [12]  878 	addc	a,r6
      00000C FE               [12]  879 	mov	r6,a
      00000D 8D 82            [24]  880 	mov	dpl,r5
      00000F 8E 83            [24]  881 	mov	dph,r6
      000011 8F F0            [24]  882 	mov	b,r7
      000013 12r00r00         [24]  883 	lcall	__gptrget
      000016 24 05            [12]  884 	add	a,#0x05
      000018 F5 82            [12]  885 	mov	dpl,a
                                    886 ;	../lib_master/linefi_packet.c:51: }
      00001A 22               [24]  887 	ret
                                    888 ;------------------------------------------------------------
                                    889 ;Allocation info for local variables in function 'calc_crc_linefi_packet_packet'
                                    890 ;------------------------------------------------------------
                                    891 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    892 ;u8CRC                     Allocated to registers 
                                    893 ;------------------------------------------------------------
                                    894 ;	../lib_master/linefi_packet.c:53: uint8 calc_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                    895 ;	-----------------------------------------
                                    896 ;	 function calc_crc_linefi_packet_packet
                                    897 ;	-----------------------------------------
      00001B                        898 _calc_crc_linefi_packet_packet:
      00001B AD 82            [24]  899 	mov	r5,dpl
      00001D AE 83            [24]  900 	mov	r6,dph
      00001F AF F0            [24]  901 	mov	r7,b
                                    902 ;	../lib_master/linefi_packet.c:55: uint8 u8CRC = crc8((uint8 *)apstLineFiPkt, 4, 0xFF);
      000021 8D 02            [24]  903 	mov	ar2,r5
      000023 8E 03            [24]  904 	mov	ar3,r6
      000025 8F 04            [24]  905 	mov	ar4,r7
      000027 75*00 04         [24]  906 	mov	_crc8_PARM_2,#0x04
      00002A 75*01 FF         [24]  907 	mov	_crc8_PARM_3,#0xff
      00002D 8A 82            [24]  908 	mov	dpl,r2
      00002F 8B 83            [24]  909 	mov	dph,r3
      000031 8C F0            [24]  910 	mov	b,r4
      000033 C0 07            [24]  911 	push	ar7
      000035 C0 06            [24]  912 	push	ar6
      000037 C0 05            [24]  913 	push	ar5
      000039 12r06r17         [24]  914 	lcall	_crc8
      00003C 85 82*01         [24]  915 	mov	_crc8_PARM_3,dpl
      00003F D0 05            [24]  916 	pop	ar5
      000041 D0 06            [24]  917 	pop	ar6
      000043 D0 07            [24]  918 	pop	ar7
                                    919 ;	../lib_master/linefi_packet.c:56: u8CRC = crc8((uint8 *)(apstLineFiPkt->pu8Data), apstLineFiPkt->u8Size-5, u8CRC);
      000045 74 05            [12]  920 	mov	a,#0x05
      000047 2D               [12]  921 	add	a,r5
      000048 FA               [12]  922 	mov	r2,a
      000049 E4               [12]  923 	clr	a
      00004A 3E               [12]  924 	addc	a,r6
      00004B FB               [12]  925 	mov	r3,a
      00004C 8F 04            [24]  926 	mov	ar4,r7
      00004E 8A 82            [24]  927 	mov	dpl,r2
      000050 8B 83            [24]  928 	mov	dph,r3
      000052 8C F0            [24]  929 	mov	b,r4
      000054 12r00r00         [24]  930 	lcall	__gptrget
      000057 FA               [12]  931 	mov	r2,a
      000058 A3               [24]  932 	inc	dptr
      000059 12r00r00         [24]  933 	lcall	__gptrget
      00005C FB               [12]  934 	mov	r3,a
      00005D A3               [24]  935 	inc	dptr
      00005E 12r00r00         [24]  936 	lcall	__gptrget
      000061 FC               [12]  937 	mov	r4,a
      000062 74 03            [12]  938 	mov	a,#0x03
      000064 2D               [12]  939 	add	a,r5
      000065 FD               [12]  940 	mov	r5,a
      000066 E4               [12]  941 	clr	a
      000067 3E               [12]  942 	addc	a,r6
      000068 FE               [12]  943 	mov	r6,a
      000069 8D 82            [24]  944 	mov	dpl,r5
      00006B 8E 83            [24]  945 	mov	dph,r6
      00006D 8F F0            [24]  946 	mov	b,r7
      00006F 12r00r00         [24]  947 	lcall	__gptrget
      000072 24 FB            [12]  948 	add	a,#0xfb
      000074 F5*00            [12]  949 	mov	_crc8_PARM_2,a
      000076 8A 82            [24]  950 	mov	dpl,r2
      000078 8B 83            [24]  951 	mov	dph,r3
      00007A 8C F0            [24]  952 	mov	b,r4
                                    953 ;	../lib_master/linefi_packet.c:58: return u8CRC;
                                    954 ;	../lib_master/linefi_packet.c:59: }
      00007C 02r06r17         [24]  955 	ljmp	_crc8
                                    956 ;------------------------------------------------------------
                                    957 ;Allocation info for local variables in function 'add_crc_linefi_packet_packet'
                                    958 ;------------------------------------------------------------
                                    959 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    960 ;u8CRC                     Allocated to registers r4 
                                    961 ;------------------------------------------------------------
                                    962 ;	../lib_master/linefi_packet.c:61: void add_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                    963 ;	-----------------------------------------
                                    964 ;	 function add_crc_linefi_packet_packet
                                    965 ;	-----------------------------------------
      00007F                        966 _add_crc_linefi_packet_packet:
                                    967 ;	../lib_master/linefi_packet.c:63: uint8 u8CRC = calc_crc_linefi_packet_packet(apstLineFiPkt);
      00007F AD 82            [24]  968 	mov	r5,dpl
      000081 AE 83            [24]  969 	mov	r6,dph
      000083 AF F0            [24]  970 	mov	r7,b
      000085 C0 07            [24]  971 	push	ar7
      000087 C0 06            [24]  972 	push	ar6
      000089 C0 05            [24]  973 	push	ar5
      00008B 12r00r1B         [24]  974 	lcall	_calc_crc_linefi_packet_packet
      00008E AC 82            [24]  975 	mov	r4,dpl
      000090 D0 05            [24]  976 	pop	ar5
      000092 D0 06            [24]  977 	pop	ar6
      000094 D0 07            [24]  978 	pop	ar7
                                    979 ;	../lib_master/linefi_packet.c:64: apstLineFiPkt->u8CRC = u8CRC;
      000096 74 04            [12]  980 	mov	a,#0x04
      000098 2D               [12]  981 	add	a,r5
      000099 FD               [12]  982 	mov	r5,a
      00009A E4               [12]  983 	clr	a
      00009B 3E               [12]  984 	addc	a,r6
      00009C FE               [12]  985 	mov	r6,a
      00009D 8D 82            [24]  986 	mov	dpl,r5
      00009F 8E 83            [24]  987 	mov	dph,r6
      0000A1 8F F0            [24]  988 	mov	b,r7
      0000A3 EC               [12]  989 	mov	a,r4
                                    990 ;	../lib_master/linefi_packet.c:65: }
      0000A4 02r00r00         [24]  991 	ljmp	__gptrput
                                    992 ;------------------------------------------------------------
                                    993 ;Allocation info for local variables in function 'chk_crc_linefi_packet_packet'
                                    994 ;------------------------------------------------------------
                                    995 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                    996 ;u8CRC                     Allocated to registers r4 
                                    997 ;------------------------------------------------------------
                                    998 ;	../lib_master/linefi_packet.c:67: uint8 chk_crc_linefi_packet_packet(linefi_packet_t * apstLineFiPkt)
                                    999 ;	-----------------------------------------
                                   1000 ;	 function chk_crc_linefi_packet_packet
                                   1001 ;	-----------------------------------------
      0000A7                       1002 _chk_crc_linefi_packet_packet:
                                   1003 ;	../lib_master/linefi_packet.c:69: uint8 u8CRC = calc_crc_linefi_packet_packet(apstLineFiPkt);
      0000A7 AD 82            [24] 1004 	mov	r5,dpl
      0000A9 AE 83            [24] 1005 	mov	r6,dph
      0000AB AF F0            [24] 1006 	mov	r7,b
      0000AD C0 07            [24] 1007 	push	ar7
      0000AF C0 06            [24] 1008 	push	ar6
      0000B1 C0 05            [24] 1009 	push	ar5
      0000B3 12r00r1B         [24] 1010 	lcall	_calc_crc_linefi_packet_packet
      0000B6 AC 82            [24] 1011 	mov	r4,dpl
      0000B8 D0 05            [24] 1012 	pop	ar5
      0000BA D0 06            [24] 1013 	pop	ar6
      0000BC D0 07            [24] 1014 	pop	ar7
                                   1015 ;	../lib_master/linefi_packet.c:71: if (apstLineFiPkt->u8CRC == u8CRC) {
      0000BE 74 04            [12] 1016 	mov	a,#0x04
      0000C0 2D               [12] 1017 	add	a,r5
      0000C1 FD               [12] 1018 	mov	r5,a
      0000C2 E4               [12] 1019 	clr	a
      0000C3 3E               [12] 1020 	addc	a,r6
      0000C4 FE               [12] 1021 	mov	r6,a
      0000C5 8D 82            [24] 1022 	mov	dpl,r5
      0000C7 8E 83            [24] 1023 	mov	dph,r6
      0000C9 8F F0            [24] 1024 	mov	b,r7
      0000CB 12r00r00         [24] 1025 	lcall	__gptrget
      0000CE B5 04 04         [24] 1026 	cjne	a,ar4,00102$
                                   1027 ;	../lib_master/linefi_packet.c:72: return CRC_OK;
      0000D1 75 82 01         [24] 1028 	mov	dpl,#0x01
      0000D4 22               [24] 1029 	ret
      0000D5                       1030 00102$:
                                   1031 ;	../lib_master/linefi_packet.c:74: return CRC_NOT_OK;
      0000D5 75 82 00         [24] 1032 	mov	dpl,#0x00
                                   1033 ;	../lib_master/linefi_packet.c:75: }
      0000D8 22               [24] 1034 	ret
                                   1035 ;------------------------------------------------------------
                                   1036 ;Allocation info for local variables in function 'get_octet_from_linefi'
                                   1037 ;------------------------------------------------------------
                                   1038 ;apu8Tmp                   Allocated to registers r5 r6 r7 
                                   1039 ;------------------------------------------------------------
                                   1040 ;	../lib_master/linefi_packet.c:78: UINT8 get_octet_from_linefi(UINT8 * apu8Tmp)
                                   1041 ;	-----------------------------------------
                                   1042 ;	 function get_octet_from_linefi
                                   1043 ;	-----------------------------------------
      0000D9                       1044 _get_octet_from_linefi:
                                   1045 ;	../lib_master/linefi_packet.c:81: return getchar_uart1(apu8Tmp);
                                   1046 ;	../lib_master/linefi_packet.c:82: }
      0000D9 02r00r00         [24] 1047 	ljmp	_getchar_uart1
                                   1048 ;------------------------------------------------------------
                                   1049 ;Allocation info for local variables in function 'send_octet_to_linefi'
                                   1050 ;------------------------------------------------------------
                                   1051 ;au8Data                   Allocated to registers 
                                   1052 ;------------------------------------------------------------
                                   1053 ;	../lib_master/linefi_packet.c:84: void send_octet_to_linefi(UINT8 au8Data)
                                   1054 ;	-----------------------------------------
                                   1055 ;	 function send_octet_to_linefi
                                   1056 ;	-----------------------------------------
      0000DC                       1057 _send_octet_to_linefi:
                                   1058 ;	../lib_master/linefi_packet.c:87: return putchar_uart1(au8Data);
                                   1059 ;	../lib_master/linefi_packet.c:88: }
      0000DC 02r00r00         [24] 1060 	ljmp	_putchar_uart1
                                   1061 ;------------------------------------------------------------
                                   1062 ;Allocation info for local variables in function 'send_linefi_packet'
                                   1063 ;------------------------------------------------------------
                                   1064 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                   1065 ;pu8Buf                    Allocated to registers r2 r3 r4 
                                   1066 ;u8CRC                     Allocated with name '_send_linefi_packet_u8CRC_65536_65'
                                   1067 ;i                         Allocated with name '_send_linefi_packet_i_65537_66'
                                   1068 ;------------------------------------------------------------
                                   1069 ;	../lib_master/linefi_packet.c:90: void send_linefi_packet(linefi_packet_t * apstLineFiPkt)
                                   1070 ;	-----------------------------------------
                                   1071 ;	 function send_linefi_packet
                                   1072 ;	-----------------------------------------
      0000DF                       1073 _send_linefi_packet:
                                   1074 ;	../lib_master/linefi_packet.c:92: uint8 __xdata u8CRC = calc_crc_linefi_packet_packet(apstLineFiPkt);
      0000DF AD 82            [24] 1075 	mov	r5,dpl
      0000E1 AE 83            [24] 1076 	mov	r6,dph
      0000E3 AF F0            [24] 1077 	mov	r7,b
      0000E5 C0 07            [24] 1078 	push	ar7
      0000E7 C0 06            [24] 1079 	push	ar6
      0000E9 C0 05            [24] 1080 	push	ar5
      0000EB 12r00r1B         [24] 1081 	lcall	_calc_crc_linefi_packet_packet
      0000EE D0 05            [24] 1082 	pop	ar5
      0000F0 D0 06            [24] 1083 	pop	ar6
      0000F2 D0 07            [24] 1084 	pop	ar7
                                   1085 ;	../lib_master/linefi_packet.c:94: uint8 * pu8Buf = (uint8 *) apstLineFiPkt;
      0000F4 8D 02            [24] 1086 	mov	ar2,r5
      0000F6 8E 03            [24] 1087 	mov	ar3,r6
      0000F8 8F 04            [24] 1088 	mov	ar4,r7
                                   1089 ;	../lib_master/linefi_packet.c:95: send_octet_to_linefi(*pu8Buf++);
      0000FA 8A 82            [24] 1090 	mov	dpl,r2
      0000FC 8B 83            [24] 1091 	mov	dph,r3
      0000FE 8C F0            [24] 1092 	mov	b,r4
      000100 12r00r00         [24] 1093 	lcall	__gptrget
      000103 F5 82            [12] 1094 	mov	dpl,a
      000105 0A               [12] 1095 	inc	r2
      000106 BA 00 01         [24] 1096 	cjne	r2,#0x00,00118$
      000109 0B               [12] 1097 	inc	r3
      00010A                       1098 00118$:
      00010A C0 07            [24] 1099 	push	ar7
      00010C C0 06            [24] 1100 	push	ar6
      00010E C0 05            [24] 1101 	push	ar5
      000110 C0 04            [24] 1102 	push	ar4
      000112 C0 03            [24] 1103 	push	ar3
      000114 C0 02            [24] 1104 	push	ar2
      000116 12r00rDC         [24] 1105 	lcall	_send_octet_to_linefi
      000119 D0 02            [24] 1106 	pop	ar2
      00011B D0 03            [24] 1107 	pop	ar3
      00011D D0 04            [24] 1108 	pop	ar4
      00011F D0 05            [24] 1109 	pop	ar5
      000121 D0 06            [24] 1110 	pop	ar6
      000123 D0 07            [24] 1111 	pop	ar7
                                   1112 ;	../lib_master/linefi_packet.c:96: send_octet_to_linefi(*pu8Buf++);
      000125 8A 82            [24] 1113 	mov	dpl,r2
      000127 8B 83            [24] 1114 	mov	dph,r3
      000129 8C F0            [24] 1115 	mov	b,r4
      00012B 12r00r00         [24] 1116 	lcall	__gptrget
      00012E F5 82            [12] 1117 	mov	dpl,a
      000130 0A               [12] 1118 	inc	r2
      000131 BA 00 01         [24] 1119 	cjne	r2,#0x00,00119$
      000134 0B               [12] 1120 	inc	r3
      000135                       1121 00119$:
      000135 C0 07            [24] 1122 	push	ar7
      000137 C0 06            [24] 1123 	push	ar6
      000139 C0 05            [24] 1124 	push	ar5
      00013B C0 04            [24] 1125 	push	ar4
      00013D C0 03            [24] 1126 	push	ar3
      00013F C0 02            [24] 1127 	push	ar2
      000141 12r00rDC         [24] 1128 	lcall	_send_octet_to_linefi
      000144 D0 02            [24] 1129 	pop	ar2
      000146 D0 03            [24] 1130 	pop	ar3
      000148 D0 04            [24] 1131 	pop	ar4
      00014A D0 05            [24] 1132 	pop	ar5
      00014C D0 06            [24] 1133 	pop	ar6
      00014E D0 07            [24] 1134 	pop	ar7
                                   1135 ;	../lib_master/linefi_packet.c:97: send_octet_to_linefi(*pu8Buf++);
      000150 8A 82            [24] 1136 	mov	dpl,r2
      000152 8B 83            [24] 1137 	mov	dph,r3
      000154 8C F0            [24] 1138 	mov	b,r4
      000156 12r00r00         [24] 1139 	lcall	__gptrget
      000159 F9               [12] 1140 	mov	r1,a
      00015A 0A               [12] 1141 	inc	r2
      00015B BA 00 01         [24] 1142 	cjne	r2,#0x00,00120$
      00015E 0B               [12] 1143 	inc	r3
      00015F                       1144 00120$:
      00015F 89 82            [24] 1145 	mov	dpl,r1
      000161 C0 07            [24] 1146 	push	ar7
      000163 C0 06            [24] 1147 	push	ar6
      000165 C0 05            [24] 1148 	push	ar5
      000167 C0 04            [24] 1149 	push	ar4
      000169 C0 03            [24] 1150 	push	ar3
      00016B C0 02            [24] 1151 	push	ar2
      00016D 12r00rDC         [24] 1152 	lcall	_send_octet_to_linefi
      000170 D0 02            [24] 1153 	pop	ar2
      000172 D0 03            [24] 1154 	pop	ar3
      000174 D0 04            [24] 1155 	pop	ar4
      000176 D0 05            [24] 1156 	pop	ar5
      000178 D0 06            [24] 1157 	pop	ar6
      00017A D0 07            [24] 1158 	pop	ar7
                                   1159 ;	../lib_master/linefi_packet.c:98: send_octet_to_linefi(*pu8Buf++);
      00017C 8A 82            [24] 1160 	mov	dpl,r2
      00017E 8B 83            [24] 1161 	mov	dph,r3
      000180 8C F0            [24] 1162 	mov	b,r4
      000182 12r00r00         [24] 1163 	lcall	__gptrget
      000185 F5 82            [12] 1164 	mov	dpl,a
      000187 0A               [12] 1165 	inc	r2
      000188 BA 00 01         [24] 1166 	cjne	r2,#0x00,00121$
      00018B 0B               [12] 1167 	inc	r3
      00018C                       1168 00121$:
      00018C C0 07            [24] 1169 	push	ar7
      00018E C0 06            [24] 1170 	push	ar6
      000190 C0 05            [24] 1171 	push	ar5
      000192 C0 04            [24] 1172 	push	ar4
      000194 C0 03            [24] 1173 	push	ar3
      000196 C0 02            [24] 1174 	push	ar2
      000198 12r00rDC         [24] 1175 	lcall	_send_octet_to_linefi
      00019B D0 02            [24] 1176 	pop	ar2
      00019D D0 03            [24] 1177 	pop	ar3
      00019F D0 04            [24] 1178 	pop	ar4
                                   1179 ;	../lib_master/linefi_packet.c:99: send_octet_to_linefi(*pu8Buf++); //CRC
      0001A1 8A 82            [24] 1180 	mov	dpl,r2
      0001A3 8B 83            [24] 1181 	mov	dph,r3
      0001A5 8C F0            [24] 1182 	mov	b,r4
      0001A7 12r00r00         [24] 1183 	lcall	__gptrget
      0001AA F5 82            [12] 1184 	mov	dpl,a
      0001AC 12r00rDC         [24] 1185 	lcall	_send_octet_to_linefi
      0001AF D0 05            [24] 1186 	pop	ar5
      0001B1 D0 06            [24] 1187 	pop	ar6
      0001B3 D0 07            [24] 1188 	pop	ar7
                                   1189 ;	../lib_master/linefi_packet.c:102: for (i=0;i<apstLineFiPkt->u8Size-5;i++) {
      0001B5 74 05            [12] 1190 	mov	a,#0x05
      0001B7 2D               [12] 1191 	add	a,r5
      0001B8 FA               [12] 1192 	mov	r2,a
      0001B9 E4               [12] 1193 	clr	a
      0001BA 3E               [12] 1194 	addc	a,r6
      0001BB FB               [12] 1195 	mov	r3,a
      0001BC 8F 04            [24] 1196 	mov	ar4,r7
      0001BE 74 03            [12] 1197 	mov	a,#0x03
      0001C0 2D               [12] 1198 	add	a,r5
      0001C1 FD               [12] 1199 	mov	r5,a
      0001C2 E4               [12] 1200 	clr	a
      0001C3 3E               [12] 1201 	addc	a,r6
      0001C4 FE               [12] 1202 	mov	r6,a
      0001C5 79 00            [12] 1203 	mov	r1,#0x00
      0001C7                       1204 00103$:
      0001C7 C0 02            [24] 1205 	push	ar2
      0001C9 C0 03            [24] 1206 	push	ar3
      0001CB C0 04            [24] 1207 	push	ar4
      0001CD 8D 82            [24] 1208 	mov	dpl,r5
      0001CF 8E 83            [24] 1209 	mov	dph,r6
      0001D1 8F F0            [24] 1210 	mov	b,r7
      0001D3 12r00r00         [24] 1211 	lcall	__gptrget
      0001D6 7C 00            [12] 1212 	mov	r4,#0x00
      0001D8 24 FB            [12] 1213 	add	a,#0xfb
      0001DA F8               [12] 1214 	mov	r0,a
      0001DB EC               [12] 1215 	mov	a,r4
      0001DC 34 FF            [12] 1216 	addc	a,#0xff
      0001DE FC               [12] 1217 	mov	r4,a
      0001DF 89 02            [24] 1218 	mov	ar2,r1
      0001E1 7B 00            [12] 1219 	mov	r3,#0x00
      0001E3 C3               [12] 1220 	clr	c
      0001E4 EA               [12] 1221 	mov	a,r2
      0001E5 98               [12] 1222 	subb	a,r0
      0001E6 EB               [12] 1223 	mov	a,r3
      0001E7 64 80            [12] 1224 	xrl	a,#0x80
      0001E9 8C F0            [24] 1225 	mov	b,r4
      0001EB 63 F0 80         [24] 1226 	xrl	b,#0x80
      0001EE 95 F0            [12] 1227 	subb	a,b
      0001F0 D0 04            [24] 1228 	pop	ar4
      0001F2 D0 03            [24] 1229 	pop	ar3
      0001F4 D0 02            [24] 1230 	pop	ar2
      0001F6 50 54            [24] 1231 	jnc	00105$
                                   1232 ;	../lib_master/linefi_packet.c:103: send_octet_to_linefi(*(apstLineFiPkt->pu8Data+i));
      0001F8 C0 05            [24] 1233 	push	ar5
      0001FA C0 06            [24] 1234 	push	ar6
      0001FC C0 07            [24] 1235 	push	ar7
      0001FE 8A 82            [24] 1236 	mov	dpl,r2
      000200 8B 83            [24] 1237 	mov	dph,r3
      000202 8C F0            [24] 1238 	mov	b,r4
      000204 12r00r00         [24] 1239 	lcall	__gptrget
      000207 F8               [12] 1240 	mov	r0,a
      000208 A3               [24] 1241 	inc	dptr
      000209 12r00r00         [24] 1242 	lcall	__gptrget
      00020C FE               [12] 1243 	mov	r6,a
      00020D A3               [24] 1244 	inc	dptr
      00020E 12r00r00         [24] 1245 	lcall	__gptrget
      000211 FF               [12] 1246 	mov	r7,a
      000212 E9               [12] 1247 	mov	a,r1
      000213 28               [12] 1248 	add	a,r0
      000214 F8               [12] 1249 	mov	r0,a
      000215 E4               [12] 1250 	clr	a
      000216 3E               [12] 1251 	addc	a,r6
      000217 FE               [12] 1252 	mov	r6,a
      000218 88 82            [24] 1253 	mov	dpl,r0
      00021A 8E 83            [24] 1254 	mov	dph,r6
      00021C 8F F0            [24] 1255 	mov	b,r7
      00021E 12r00r00         [24] 1256 	lcall	__gptrget
      000221 F5 82            [12] 1257 	mov	dpl,a
      000223 C0 07            [24] 1258 	push	ar7
      000225 C0 06            [24] 1259 	push	ar6
      000227 C0 05            [24] 1260 	push	ar5
      000229 C0 04            [24] 1261 	push	ar4
      00022B C0 03            [24] 1262 	push	ar3
      00022D C0 02            [24] 1263 	push	ar2
      00022F C0 01            [24] 1264 	push	ar1
      000231 12r00rDC         [24] 1265 	lcall	_send_octet_to_linefi
      000234 D0 01            [24] 1266 	pop	ar1
      000236 D0 02            [24] 1267 	pop	ar2
      000238 D0 03            [24] 1268 	pop	ar3
      00023A D0 04            [24] 1269 	pop	ar4
      00023C D0 05            [24] 1270 	pop	ar5
      00023E D0 06            [24] 1271 	pop	ar6
      000240 D0 07            [24] 1272 	pop	ar7
                                   1273 ;	../lib_master/linefi_packet.c:102: for (i=0;i<apstLineFiPkt->u8Size-5;i++) {
      000242 09               [12] 1274 	inc	r1
      000243 D0 07            [24] 1275 	pop	ar7
      000245 D0 06            [24] 1276 	pop	ar6
      000247 D0 05            [24] 1277 	pop	ar5
      000249 02r01rC7         [24] 1278 	ljmp	00103$
      00024C                       1279 00105$:
                                   1280 ;	../lib_master/linefi_packet.c:117: }
      00024C 22               [24] 1281 	ret
                                   1282 ;------------------------------------------------------------
                                   1283 ;Allocation info for local variables in function 'cp_buf2linefipacket'
                                   1284 ;------------------------------------------------------------
                                   1285 ;apu8RxBuf                 Allocated with name '_cp_buf2linefipacket_PARM_2'
                                   1286 ;apstLineFiPkt             Allocated with name '_cp_buf2linefipacket_PARM_3'
                                   1287 ;au8Size                   Allocated to registers r7 
                                   1288 ;pu8Buf                    Allocated to registers r5 r6 r7 
                                   1289 ;i                         Allocated with name '_cp_buf2linefipacket_i_65538_73'
                                   1290 ;sloc0                     Allocated with name '_cp_buf2linefipacket_sloc0_1_0'
                                   1291 ;------------------------------------------------------------
                                   1292 ;	../lib_master/linefi_packet.c:119: uint8 cp_buf2linefipacket(uint8 au8Size, uint8 * apu8RxBuf, linefi_packet_t * apstLineFiPkt)
                                   1293 ;	-----------------------------------------
                                   1294 ;	 function cp_buf2linefipacket
                                   1295 ;	-----------------------------------------
      00024D                       1296 _cp_buf2linefipacket:
      00024D AF 82            [24] 1297 	mov	r7,dpl
                                   1298 ;	../lib_master/linefi_packet.c:124: if (au8Size < 5) {
      00024F BF 05 00         [24] 1299 	cjne	r7,#0x05,00132$
      000252                       1300 00132$:
      000252 50 04            [24] 1301 	jnc	00102$
                                   1302 ;	../lib_master/linefi_packet.c:126: return CONV_ERR_TOO_SMALLSIZE;
      000254 75 82 03         [24] 1303 	mov	dpl,#0x03
      000257 22               [24] 1304 	ret
      000258                       1305 00102$:
                                   1306 ;	../lib_master/linefi_packet.c:129: uint8 * pu8Buf = (uint8 *) apstLineFiPkt;
      000258 AD*05            [24] 1307 	mov	r5,_cp_buf2linefipacket_PARM_3
      00025A AE*06            [24] 1308 	mov	r6,(_cp_buf2linefipacket_PARM_3 + 1)
      00025C AF*07            [24] 1309 	mov	r7,(_cp_buf2linefipacket_PARM_3 + 2)
                                   1310 ;	../lib_master/linefi_packet.c:132: *pu8Buf++ = *apu8RxBuf++;
      00025E AA*02            [24] 1311 	mov	r2,_cp_buf2linefipacket_PARM_2
      000260 AB*03            [24] 1312 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      000262 AC*04            [24] 1313 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      000264 8A 82            [24] 1314 	mov	dpl,r2
      000266 8B 83            [24] 1315 	mov	dph,r3
      000268 8C F0            [24] 1316 	mov	b,r4
      00026A 12r00r00         [24] 1317 	lcall	__gptrget
      00026D F9               [12] 1318 	mov	r1,a
      00026E 74 01            [12] 1319 	mov	a,#0x01
      000270 2A               [12] 1320 	add	a,r2
      000271 F5*02            [12] 1321 	mov	_cp_buf2linefipacket_PARM_2,a
      000273 E4               [12] 1322 	clr	a
      000274 3B               [12] 1323 	addc	a,r3
      000275 F5*03            [12] 1324 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      000277 8C*04            [24] 1325 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      000279 8D 82            [24] 1326 	mov	dpl,r5
      00027B 8E 83            [24] 1327 	mov	dph,r6
      00027D 8F F0            [24] 1328 	mov	b,r7
      00027F E9               [12] 1329 	mov	a,r1
      000280 12r00r00         [24] 1330 	lcall	__gptrput
      000283 0D               [12] 1331 	inc	r5
      000284 BD 00 01         [24] 1332 	cjne	r5,#0x00,00134$
      000287 0E               [12] 1333 	inc	r6
      000288                       1334 00134$:
                                   1335 ;	../lib_master/linefi_packet.c:133: *pu8Buf++ = *apu8RxBuf++;
      000288 AA*02            [24] 1336 	mov	r2,_cp_buf2linefipacket_PARM_2
      00028A AB*03            [24] 1337 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      00028C AC*04            [24] 1338 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      00028E 8A 82            [24] 1339 	mov	dpl,r2
      000290 8B 83            [24] 1340 	mov	dph,r3
      000292 8C F0            [24] 1341 	mov	b,r4
      000294 12r00r00         [24] 1342 	lcall	__gptrget
      000297 F9               [12] 1343 	mov	r1,a
      000298 74 01            [12] 1344 	mov	a,#0x01
      00029A 2A               [12] 1345 	add	a,r2
      00029B F5*02            [12] 1346 	mov	_cp_buf2linefipacket_PARM_2,a
      00029D E4               [12] 1347 	clr	a
      00029E 3B               [12] 1348 	addc	a,r3
      00029F F5*03            [12] 1349 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      0002A1 8C*04            [24] 1350 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      0002A3 8D 82            [24] 1351 	mov	dpl,r5
      0002A5 8E 83            [24] 1352 	mov	dph,r6
      0002A7 8F F0            [24] 1353 	mov	b,r7
      0002A9 E9               [12] 1354 	mov	a,r1
      0002AA 12r00r00         [24] 1355 	lcall	__gptrput
      0002AD 0D               [12] 1356 	inc	r5
      0002AE BD 00 01         [24] 1357 	cjne	r5,#0x00,00135$
      0002B1 0E               [12] 1358 	inc	r6
      0002B2                       1359 00135$:
                                   1360 ;	../lib_master/linefi_packet.c:134: *pu8Buf++ = *apu8RxBuf++;
      0002B2 AA*02            [24] 1361 	mov	r2,_cp_buf2linefipacket_PARM_2
      0002B4 AB*03            [24] 1362 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      0002B6 AC*04            [24] 1363 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      0002B8 8A 82            [24] 1364 	mov	dpl,r2
      0002BA 8B 83            [24] 1365 	mov	dph,r3
      0002BC 8C F0            [24] 1366 	mov	b,r4
      0002BE 12r00r00         [24] 1367 	lcall	__gptrget
      0002C1 F9               [12] 1368 	mov	r1,a
      0002C2 74 01            [12] 1369 	mov	a,#0x01
      0002C4 2A               [12] 1370 	add	a,r2
      0002C5 F5*02            [12] 1371 	mov	_cp_buf2linefipacket_PARM_2,a
      0002C7 E4               [12] 1372 	clr	a
      0002C8 3B               [12] 1373 	addc	a,r3
      0002C9 F5*03            [12] 1374 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      0002CB 8C*04            [24] 1375 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      0002CD 8D 82            [24] 1376 	mov	dpl,r5
      0002CF 8E 83            [24] 1377 	mov	dph,r6
      0002D1 8F F0            [24] 1378 	mov	b,r7
      0002D3 E9               [12] 1379 	mov	a,r1
      0002D4 12r00r00         [24] 1380 	lcall	__gptrput
      0002D7 0D               [12] 1381 	inc	r5
      0002D8 BD 00 01         [24] 1382 	cjne	r5,#0x00,00136$
      0002DB 0E               [12] 1383 	inc	r6
      0002DC                       1384 00136$:
                                   1385 ;	../lib_master/linefi_packet.c:135: *pu8Buf++ = *apu8RxBuf++;
      0002DC AA*02            [24] 1386 	mov	r2,_cp_buf2linefipacket_PARM_2
      0002DE AB*03            [24] 1387 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      0002E0 AC*04            [24] 1388 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      0002E2 8A 82            [24] 1389 	mov	dpl,r2
      0002E4 8B 83            [24] 1390 	mov	dph,r3
      0002E6 8C F0            [24] 1391 	mov	b,r4
      0002E8 12r00r00         [24] 1392 	lcall	__gptrget
      0002EB F9               [12] 1393 	mov	r1,a
      0002EC 74 01            [12] 1394 	mov	a,#0x01
      0002EE 2A               [12] 1395 	add	a,r2
      0002EF F5*02            [12] 1396 	mov	_cp_buf2linefipacket_PARM_2,a
      0002F1 E4               [12] 1397 	clr	a
      0002F2 3B               [12] 1398 	addc	a,r3
      0002F3 F5*03            [12] 1399 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      0002F5 8C*04            [24] 1400 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      0002F7 8D 82            [24] 1401 	mov	dpl,r5
      0002F9 8E 83            [24] 1402 	mov	dph,r6
      0002FB 8F F0            [24] 1403 	mov	b,r7
      0002FD E9               [12] 1404 	mov	a,r1
      0002FE 12r00r00         [24] 1405 	lcall	__gptrput
      000301 0D               [12] 1406 	inc	r5
      000302 BD 00 01         [24] 1407 	cjne	r5,#0x00,00137$
      000305 0E               [12] 1408 	inc	r6
      000306                       1409 00137$:
                                   1410 ;	../lib_master/linefi_packet.c:136: *pu8Buf++ = *apu8RxBuf++;
      000306 AA*02            [24] 1411 	mov	r2,_cp_buf2linefipacket_PARM_2
      000308 AB*03            [24] 1412 	mov	r3,(_cp_buf2linefipacket_PARM_2 + 1)
      00030A AC*04            [24] 1413 	mov	r4,(_cp_buf2linefipacket_PARM_2 + 2)
      00030C 8A 82            [24] 1414 	mov	dpl,r2
      00030E 8B 83            [24] 1415 	mov	dph,r3
      000310 8C F0            [24] 1416 	mov	b,r4
      000312 12r00r00         [24] 1417 	lcall	__gptrget
      000315 F9               [12] 1418 	mov	r1,a
      000316 74 01            [12] 1419 	mov	a,#0x01
      000318 2A               [12] 1420 	add	a,r2
      000319 F5*02            [12] 1421 	mov	_cp_buf2linefipacket_PARM_2,a
      00031B E4               [12] 1422 	clr	a
      00031C 3B               [12] 1423 	addc	a,r3
      00031D F5*03            [12] 1424 	mov	(_cp_buf2linefipacket_PARM_2 + 1),a
      00031F 8C*04            [24] 1425 	mov	(_cp_buf2linefipacket_PARM_2 + 2),r4
      000321 8D 82            [24] 1426 	mov	dpl,r5
      000323 8E 83            [24] 1427 	mov	dph,r6
      000325 8F F0            [24] 1428 	mov	b,r7
      000327 E9               [12] 1429 	mov	a,r1
      000328 12r00r00         [24] 1430 	lcall	__gptrput
                                   1431 ;	../lib_master/linefi_packet.c:140: for (i=0;i<apstLineFiPkt->u8Size-5;i++) {
      00032B AD*05            [24] 1432 	mov	r5,_cp_buf2linefipacket_PARM_3
      00032D AE*06            [24] 1433 	mov	r6,(_cp_buf2linefipacket_PARM_3 + 1)
      00032F AF*07            [24] 1434 	mov	r7,(_cp_buf2linefipacket_PARM_3 + 2)
      000331 74 03            [12] 1435 	mov	a,#0x03
      000333 2D               [12] 1436 	add	a,r5
      000334 FA               [12] 1437 	mov	r2,a
      000335 E4               [12] 1438 	clr	a
      000336 3E               [12] 1439 	addc	a,r6
      000337 FB               [12] 1440 	mov	r3,a
      000338 8F 04            [24] 1441 	mov	ar4,r7
      00033A 85*02*09         [24] 1442 	mov	_cp_buf2linefipacket_sloc0_1_0,_cp_buf2linefipacket_PARM_2
      00033D 85*03*0A         [24] 1443 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 1),(_cp_buf2linefipacket_PARM_2 + 1)
      000340 85*04*0B         [24] 1444 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 2),(_cp_buf2linefipacket_PARM_2 + 2)
      000343 75*08 00         [24] 1445 	mov	_cp_buf2linefipacket_i_65538_73,#0x00
      000346                       1446 00107$:
      000346 C0 05            [24] 1447 	push	ar5
      000348 C0 06            [24] 1448 	push	ar6
      00034A C0 07            [24] 1449 	push	ar7
      00034C 8A 82            [24] 1450 	mov	dpl,r2
      00034E 8B 83            [24] 1451 	mov	dph,r3
      000350 8C F0            [24] 1452 	mov	b,r4
      000352 12r00r00         [24] 1453 	lcall	__gptrget
      000355 79 00            [12] 1454 	mov	r1,#0x00
      000357 24 FB            [12] 1455 	add	a,#0xfb
      000359 F8               [12] 1456 	mov	r0,a
      00035A E9               [12] 1457 	mov	a,r1
      00035B 34 FF            [12] 1458 	addc	a,#0xff
      00035D F9               [12] 1459 	mov	r1,a
      00035E AE*08            [24] 1460 	mov	r6,_cp_buf2linefipacket_i_65538_73
      000360 7F 00            [12] 1461 	mov	r7,#0x00
      000362 C3               [12] 1462 	clr	c
      000363 EE               [12] 1463 	mov	a,r6
      000364 98               [12] 1464 	subb	a,r0
      000365 EF               [12] 1465 	mov	a,r7
      000366 64 80            [12] 1466 	xrl	a,#0x80
      000368 89 F0            [24] 1467 	mov	b,r1
      00036A 63 F0 80         [24] 1468 	xrl	b,#0x80
      00036D 95 F0            [12] 1469 	subb	a,b
      00036F D0 07            [24] 1470 	pop	ar7
      000371 D0 06            [24] 1471 	pop	ar6
      000373 D0 05            [24] 1472 	pop	ar5
      000375 50 53            [24] 1473 	jnc	00103$
                                   1474 ;	../lib_master/linefi_packet.c:141: apstLineFiPkt->pu8Data[i] = *apu8RxBuf++;
      000377 C0 02            [24] 1475 	push	ar2
      000379 C0 03            [24] 1476 	push	ar3
      00037B C0 04            [24] 1477 	push	ar4
      00037D 74 05            [12] 1478 	mov	a,#0x05
      00037F 2D               [12] 1479 	add	a,r5
      000380 F8               [12] 1480 	mov	r0,a
      000381 E4               [12] 1481 	clr	a
      000382 3E               [12] 1482 	addc	a,r6
      000383 F9               [12] 1483 	mov	r1,a
      000384 8F 04            [24] 1484 	mov	ar4,r7
      000386 88 82            [24] 1485 	mov	dpl,r0
      000388 89 83            [24] 1486 	mov	dph,r1
      00038A 8C F0            [24] 1487 	mov	b,r4
      00038C 12r00r00         [24] 1488 	lcall	__gptrget
      00038F F8               [12] 1489 	mov	r0,a
      000390 A3               [24] 1490 	inc	dptr
      000391 12r00r00         [24] 1491 	lcall	__gptrget
      000394 F9               [12] 1492 	mov	r1,a
      000395 A3               [24] 1493 	inc	dptr
      000396 12r00r00         [24] 1494 	lcall	__gptrget
      000399 FC               [12] 1495 	mov	r4,a
      00039A E5*08            [12] 1496 	mov	a,_cp_buf2linefipacket_i_65538_73
      00039C 28               [12] 1497 	add	a,r0
      00039D F8               [12] 1498 	mov	r0,a
      00039E E4               [12] 1499 	clr	a
      00039F 39               [12] 1500 	addc	a,r1
      0003A0 F9               [12] 1501 	mov	r1,a
      0003A1 85*09 82         [24] 1502 	mov	dpl,_cp_buf2linefipacket_sloc0_1_0
      0003A4 85*0A 83         [24] 1503 	mov	dph,(_cp_buf2linefipacket_sloc0_1_0 + 1)
      0003A7 85*0B F0         [24] 1504 	mov	b,(_cp_buf2linefipacket_sloc0_1_0 + 2)
      0003AA 12r00r00         [24] 1505 	lcall	__gptrget
      0003AD FB               [12] 1506 	mov	r3,a
      0003AE A3               [24] 1507 	inc	dptr
      0003AF 85 82*09         [24] 1508 	mov	_cp_buf2linefipacket_sloc0_1_0,dpl
      0003B2 85 83*0A         [24] 1509 	mov	(_cp_buf2linefipacket_sloc0_1_0 + 1),dph
      0003B5 88 82            [24] 1510 	mov	dpl,r0
      0003B7 89 83            [24] 1511 	mov	dph,r1
      0003B9 8C F0            [24] 1512 	mov	b,r4
      0003BB EB               [12] 1513 	mov	a,r3
      0003BC 12r00r00         [24] 1514 	lcall	__gptrput
                                   1515 ;	../lib_master/linefi_packet.c:140: for (i=0;i<apstLineFiPkt->u8Size-5;i++) {
      0003BF 05*08            [12] 1516 	inc	_cp_buf2linefipacket_i_65538_73
      0003C1 D0 04            [24] 1517 	pop	ar4
      0003C3 D0 03            [24] 1518 	pop	ar3
      0003C5 D0 02            [24] 1519 	pop	ar2
      0003C7 02r03r46         [24] 1520 	ljmp	00107$
      0003CA                       1521 00103$:
                                   1522 ;	../lib_master/linefi_packet.c:144: if (chk_crc_linefi_packet_packet(apstLineFiPkt) == CRC_NOT_OK) {
      0003CA 8D 82            [24] 1523 	mov	dpl,r5
      0003CC 8E 83            [24] 1524 	mov	dph,r6
      0003CE 8F F0            [24] 1525 	mov	b,r7
      0003D0 12r00rA7         [24] 1526 	lcall	_chk_crc_linefi_packet_packet
      0003D3 E5 82            [12] 1527 	mov	a,dpl
      0003D5 70 04            [24] 1528 	jnz	00105$
                                   1529 ;	../lib_master/linefi_packet.c:145: return CONV_ERR_CRC;
      0003D7 75 82 04         [24] 1530 	mov	dpl,#0x04
      0003DA 22               [24] 1531 	ret
      0003DB                       1532 00105$:
                                   1533 ;	../lib_master/linefi_packet.c:147: return CONV_OK;
      0003DB 75 82 02         [24] 1534 	mov	dpl,#0x02
                                   1535 ;	../lib_master/linefi_packet.c:148: }
      0003DE 22               [24] 1536 	ret
                                   1537 ;------------------------------------------------------------
                                   1538 ;Allocation info for local variables in function 'print_linefipacket'
                                   1539 ;------------------------------------------------------------
                                   1540 ;apstLineFiPkt             Allocated to registers r5 r6 r7 
                                   1541 ;i                         Allocated with name '_print_linefipacket_i_65537_79'
                                   1542 ;------------------------------------------------------------
                                   1543 ;	../lib_master/linefi_packet.c:150: void print_linefipacket(linefi_packet_t * apstLineFiPkt)
                                   1544 ;	-----------------------------------------
                                   1545 ;	 function print_linefipacket
                                   1546 ;	-----------------------------------------
      0003DF                       1547 _print_linefipacket:
      0003DF AD 82            [24] 1548 	mov	r5,dpl
      0003E1 AE 83            [24] 1549 	mov	r6,dph
      0003E3 AF F0            [24] 1550 	mov	r7,b
                                   1551 ;	../lib_master/linefi_packet.c:152: printf_fast_f("-------------------------------\r\n");
      0003E5 C0 07            [24] 1552 	push	ar7
      0003E7 C0 06            [24] 1553 	push	ar6
      0003E9 C0 05            [24] 1554 	push	ar5
      0003EB 74r00            [12] 1555 	mov	a,#___str_0
      0003ED C0 E0            [24] 1556 	push	acc
      0003EF 74s00            [12] 1557 	mov	a,#(___str_0 >> 8)
      0003F1 C0 E0            [24] 1558 	push	acc
      0003F3 12r00r00         [24] 1559 	lcall	_printf_fast_f
      0003F6 15 81            [12] 1560 	dec	sp
      0003F8 15 81            [12] 1561 	dec	sp
      0003FA D0 05            [24] 1562 	pop	ar5
      0003FC D0 06            [24] 1563 	pop	ar6
      0003FE D0 07            [24] 1564 	pop	ar7
                                   1565 ;	../lib_master/linefi_packet.c:153: printf_fast_f("Ver : %d\r\n", apstLineFiPkt->u8Ver);
      000400 8D 82            [24] 1566 	mov	dpl,r5
      000402 8E 83            [24] 1567 	mov	dph,r6
      000404 8F F0            [24] 1568 	mov	b,r7
      000406 12r00r00         [24] 1569 	lcall	__gptrget
      000409 FC               [12] 1570 	mov	r4,a
      00040A 7B 00            [12] 1571 	mov	r3,#0x00
      00040C C0 07            [24] 1572 	push	ar7
      00040E C0 06            [24] 1573 	push	ar6
      000410 C0 05            [24] 1574 	push	ar5
      000412 C0 04            [24] 1575 	push	ar4
      000414 C0 03            [24] 1576 	push	ar3
      000416 74r22            [12] 1577 	mov	a,#___str_1
      000418 C0 E0            [24] 1578 	push	acc
      00041A 74s00            [12] 1579 	mov	a,#(___str_1 >> 8)
      00041C C0 E0            [24] 1580 	push	acc
      00041E 12r00r00         [24] 1581 	lcall	_printf_fast_f
      000421 E5 81            [12] 1582 	mov	a,sp
      000423 24 FC            [12] 1583 	add	a,#0xfc
      000425 F5 81            [12] 1584 	mov	sp,a
      000427 D0 05            [24] 1585 	pop	ar5
      000429 D0 06            [24] 1586 	pop	ar6
      00042B D0 07            [24] 1587 	pop	ar7
                                   1588 ;	../lib_master/linefi_packet.c:154: printf_fast_f("Type: %d(%s)\r\n", apstLineFiPkt->u8Type, gpcTypeStr[apstLineFiPkt->u8Type]);
      00042D 74 01            [12] 1589 	mov	a,#0x01
      00042F 2D               [12] 1590 	add	a,r5
      000430 FA               [12] 1591 	mov	r2,a
      000431 E4               [12] 1592 	clr	a
      000432 3E               [12] 1593 	addc	a,r6
      000433 FB               [12] 1594 	mov	r3,a
      000434 8F 04            [24] 1595 	mov	ar4,r7
      000436 8A 82            [24] 1596 	mov	dpl,r2
      000438 8B 83            [24] 1597 	mov	dph,r3
      00043A 8C F0            [24] 1598 	mov	b,r4
      00043C 12r00r00         [24] 1599 	lcall	__gptrget
      00043F FA               [12] 1600 	mov	r2,a
      000440 75 F0 03         [24] 1601 	mov	b,#0x03
      000443 A4               [48] 1602 	mul	ab
      000444 24r00            [12] 1603 	add	a,#_gpcTypeStr
      000446 F5 82            [12] 1604 	mov	dpl,a
      000448 74s00            [12] 1605 	mov	a,#(_gpcTypeStr >> 8)
      00044A 35 F0            [12] 1606 	addc	a,b
      00044C F5 83            [12] 1607 	mov	dph,a
      00044E E0               [24] 1608 	movx	a,@dptr
      00044F F9               [12] 1609 	mov	r1,a
      000450 A3               [24] 1610 	inc	dptr
      000451 E0               [24] 1611 	movx	a,@dptr
      000452 FB               [12] 1612 	mov	r3,a
      000453 A3               [24] 1613 	inc	dptr
      000454 E0               [24] 1614 	movx	a,@dptr
      000455 FC               [12] 1615 	mov	r4,a
      000456 8A 00            [24] 1616 	mov	ar0,r2
      000458 7A 00            [12] 1617 	mov	r2,#0x00
      00045A C0 07            [24] 1618 	push	ar7
      00045C C0 06            [24] 1619 	push	ar6
      00045E C0 05            [24] 1620 	push	ar5
      000460 C0 01            [24] 1621 	push	ar1
      000462 C0 03            [24] 1622 	push	ar3
      000464 C0 04            [24] 1623 	push	ar4
      000466 C0 00            [24] 1624 	push	ar0
      000468 C0 02            [24] 1625 	push	ar2
      00046A 74r2D            [12] 1626 	mov	a,#___str_2
      00046C C0 E0            [24] 1627 	push	acc
      00046E 74s00            [12] 1628 	mov	a,#(___str_2 >> 8)
      000470 C0 E0            [24] 1629 	push	acc
      000472 12r00r00         [24] 1630 	lcall	_printf_fast_f
      000475 E5 81            [12] 1631 	mov	a,sp
      000477 24 F9            [12] 1632 	add	a,#0xf9
      000479 F5 81            [12] 1633 	mov	sp,a
      00047B D0 05            [24] 1634 	pop	ar5
      00047D D0 06            [24] 1635 	pop	ar6
      00047F D0 07            [24] 1636 	pop	ar7
                                   1637 ;	../lib_master/linefi_packet.c:157: printf_fast_f("Addr: %d\r\n", apstLineFiPkt->u8Addr);
      000481 74 02            [12] 1638 	mov	a,#0x02
      000483 2D               [12] 1639 	add	a,r5
      000484 FA               [12] 1640 	mov	r2,a
      000485 E4               [12] 1641 	clr	a
      000486 3E               [12] 1642 	addc	a,r6
      000487 FB               [12] 1643 	mov	r3,a
      000488 8F 04            [24] 1644 	mov	ar4,r7
      00048A 8A 82            [24] 1645 	mov	dpl,r2
      00048C 8B 83            [24] 1646 	mov	dph,r3
      00048E 8C F0            [24] 1647 	mov	b,r4
      000490 12r00r00         [24] 1648 	lcall	__gptrget
      000493 FA               [12] 1649 	mov	r2,a
      000494 7C 00            [12] 1650 	mov	r4,#0x00
      000496 C0 07            [24] 1651 	push	ar7
      000498 C0 06            [24] 1652 	push	ar6
      00049A C0 05            [24] 1653 	push	ar5
      00049C C0 02            [24] 1654 	push	ar2
      00049E C0 04            [24] 1655 	push	ar4
      0004A0 74r3C            [12] 1656 	mov	a,#___str_3
      0004A2 C0 E0            [24] 1657 	push	acc
      0004A4 74s00            [12] 1658 	mov	a,#(___str_3 >> 8)
      0004A6 C0 E0            [24] 1659 	push	acc
      0004A8 12r00r00         [24] 1660 	lcall	_printf_fast_f
      0004AB E5 81            [12] 1661 	mov	a,sp
      0004AD 24 FC            [12] 1662 	add	a,#0xfc
      0004AF F5 81            [12] 1663 	mov	sp,a
      0004B1 D0 05            [24] 1664 	pop	ar5
      0004B3 D0 06            [24] 1665 	pop	ar6
      0004B5 D0 07            [24] 1666 	pop	ar7
                                   1667 ;	../lib_master/linefi_packet.c:158: printf_fast_f("Size: %d\r\n", apstLineFiPkt->u8Size);
      0004B7 74 03            [12] 1668 	mov	a,#0x03
      0004B9 2D               [12] 1669 	add	a,r5
      0004BA FA               [12] 1670 	mov	r2,a
      0004BB E4               [12] 1671 	clr	a
      0004BC 3E               [12] 1672 	addc	a,r6
      0004BD FB               [12] 1673 	mov	r3,a
      0004BE 8F 04            [24] 1674 	mov	ar4,r7
      0004C0 8A 82            [24] 1675 	mov	dpl,r2
      0004C2 8B 83            [24] 1676 	mov	dph,r3
      0004C4 8C F0            [24] 1677 	mov	b,r4
      0004C6 12r00r00         [24] 1678 	lcall	__gptrget
      0004C9 FA               [12] 1679 	mov	r2,a
      0004CA 7C 00            [12] 1680 	mov	r4,#0x00
      0004CC C0 07            [24] 1681 	push	ar7
      0004CE C0 06            [24] 1682 	push	ar6
      0004D0 C0 05            [24] 1683 	push	ar5
      0004D2 C0 02            [24] 1684 	push	ar2
      0004D4 C0 04            [24] 1685 	push	ar4
      0004D6 74r47            [12] 1686 	mov	a,#___str_4
      0004D8 C0 E0            [24] 1687 	push	acc
      0004DA 74s00            [12] 1688 	mov	a,#(___str_4 >> 8)
      0004DC C0 E0            [24] 1689 	push	acc
      0004DE 12r00r00         [24] 1690 	lcall	_printf_fast_f
      0004E1 E5 81            [12] 1691 	mov	a,sp
      0004E3 24 FC            [12] 1692 	add	a,#0xfc
      0004E5 F5 81            [12] 1693 	mov	sp,a
      0004E7 D0 05            [24] 1694 	pop	ar5
      0004E9 D0 06            [24] 1695 	pop	ar6
      0004EB D0 07            [24] 1696 	pop	ar7
                                   1697 ;	../lib_master/linefi_packet.c:159: printf_fast_f("CRC comp : %d %d \r\n", apstLineFiPkt->u8CRC, calc_crc_linefi_packet_packet(apstLineFiPkt));
      0004ED 8D 82            [24] 1698 	mov	dpl,r5
      0004EF 8E 83            [24] 1699 	mov	dph,r6
      0004F1 8F F0            [24] 1700 	mov	b,r7
      0004F3 C0 07            [24] 1701 	push	ar7
      0004F5 C0 06            [24] 1702 	push	ar6
      0004F7 C0 05            [24] 1703 	push	ar5
      0004F9 12r00r1B         [24] 1704 	lcall	_calc_crc_linefi_packet_packet
      0004FC AC 82            [24] 1705 	mov	r4,dpl
      0004FE D0 05            [24] 1706 	pop	ar5
      000500 D0 06            [24] 1707 	pop	ar6
      000502 D0 07            [24] 1708 	pop	ar7
      000504 7B 00            [12] 1709 	mov	r3,#0x00
      000506 74 04            [12] 1710 	mov	a,#0x04
      000508 2D               [12] 1711 	add	a,r5
      000509 F8               [12] 1712 	mov	r0,a
      00050A E4               [12] 1713 	clr	a
      00050B 3E               [12] 1714 	addc	a,r6
      00050C F9               [12] 1715 	mov	r1,a
      00050D 8F 02            [24] 1716 	mov	ar2,r7
      00050F 88 82            [24] 1717 	mov	dpl,r0
      000511 89 83            [24] 1718 	mov	dph,r1
      000513 8A F0            [24] 1719 	mov	b,r2
      000515 12r00r00         [24] 1720 	lcall	__gptrget
      000518 F8               [12] 1721 	mov	r0,a
      000519 7A 00            [12] 1722 	mov	r2,#0x00
      00051B C0 07            [24] 1723 	push	ar7
      00051D C0 06            [24] 1724 	push	ar6
      00051F C0 05            [24] 1725 	push	ar5
      000521 C0 04            [24] 1726 	push	ar4
      000523 C0 03            [24] 1727 	push	ar3
      000525 C0 00            [24] 1728 	push	ar0
      000527 C0 02            [24] 1729 	push	ar2
      000529 74r52            [12] 1730 	mov	a,#___str_5
      00052B C0 E0            [24] 1731 	push	acc
      00052D 74s00            [12] 1732 	mov	a,#(___str_5 >> 8)
      00052F C0 E0            [24] 1733 	push	acc
      000531 12r00r00         [24] 1734 	lcall	_printf_fast_f
      000534 E5 81            [12] 1735 	mov	a,sp
      000536 24 FA            [12] 1736 	add	a,#0xfa
      000538 F5 81            [12] 1737 	mov	sp,a
                                   1738 ;	../lib_master/linefi_packet.c:160: printf_fast_f("DATA: ");
      00053A 74r66            [12] 1739 	mov	a,#___str_6
      00053C C0 E0            [24] 1740 	push	acc
      00053E 74s00            [12] 1741 	mov	a,#(___str_6 >> 8)
      000540 C0 E0            [24] 1742 	push	acc
      000542 12r00r00         [24] 1743 	lcall	_printf_fast_f
      000545 15 81            [12] 1744 	dec	sp
      000547 15 81            [12] 1745 	dec	sp
      000549 D0 05            [24] 1746 	pop	ar5
      00054B D0 06            [24] 1747 	pop	ar6
      00054D D0 07            [24] 1748 	pop	ar7
                                   1749 ;	../lib_master/linefi_packet.c:162: for (i=0;i<apstLineFiPkt->u8Size-5;i++) {
      00054F 74 05            [12] 1750 	mov	a,#0x05
      000551 2D               [12] 1751 	add	a,r5
      000552 FA               [12] 1752 	mov	r2,a
      000553 E4               [12] 1753 	clr	a
      000554 3E               [12] 1754 	addc	a,r6
      000555 FB               [12] 1755 	mov	r3,a
      000556 8F 04            [24] 1756 	mov	ar4,r7
      000558 74 03            [12] 1757 	mov	a,#0x03
      00055A 2D               [12] 1758 	add	a,r5
      00055B FD               [12] 1759 	mov	r5,a
      00055C E4               [12] 1760 	clr	a
      00055D 3E               [12] 1761 	addc	a,r6
      00055E FE               [12] 1762 	mov	r6,a
      00055F 75*0C 00         [24] 1763 	mov	_print_linefipacket_i_65537_79,#0x00
      000562                       1764 00103$:
      000562 C0 02            [24] 1765 	push	ar2
      000564 C0 03            [24] 1766 	push	ar3
      000566 C0 04            [24] 1767 	push	ar4
      000568 8D 82            [24] 1768 	mov	dpl,r5
      00056A 8E 83            [24] 1769 	mov	dph,r6
      00056C 8F F0            [24] 1770 	mov	b,r7
      00056E 12r00r00         [24] 1771 	lcall	__gptrget
      000571 79 00            [12] 1772 	mov	r1,#0x00
      000573 24 FB            [12] 1773 	add	a,#0xfb
      000575 F8               [12] 1774 	mov	r0,a
      000576 E9               [12] 1775 	mov	a,r1
      000577 34 FF            [12] 1776 	addc	a,#0xff
      000579 F9               [12] 1777 	mov	r1,a
      00057A AB*0C            [24] 1778 	mov	r3,_print_linefipacket_i_65537_79
      00057C 7C 00            [12] 1779 	mov	r4,#0x00
      00057E C3               [12] 1780 	clr	c
      00057F EB               [12] 1781 	mov	a,r3
      000580 98               [12] 1782 	subb	a,r0
      000581 EC               [12] 1783 	mov	a,r4
      000582 64 80            [12] 1784 	xrl	a,#0x80
      000584 89 F0            [24] 1785 	mov	b,r1
      000586 63 F0 80         [24] 1786 	xrl	b,#0x80
      000589 95 F0            [12] 1787 	subb	a,b
      00058B D0 04            [24] 1788 	pop	ar4
      00058D D0 03            [24] 1789 	pop	ar3
      00058F D0 02            [24] 1790 	pop	ar2
      000591 50 65            [24] 1791 	jnc	00101$
                                   1792 ;	../lib_master/linefi_packet.c:163: printf_fast_f("0x%x ", apstLineFiPkt->pu8Data[i]);
      000593 C0 05            [24] 1793 	push	ar5
      000595 C0 06            [24] 1794 	push	ar6
      000597 C0 07            [24] 1795 	push	ar7
      000599 8A 82            [24] 1796 	mov	dpl,r2
      00059B 8B 83            [24] 1797 	mov	dph,r3
      00059D 8C F0            [24] 1798 	mov	b,r4
      00059F 12r00r00         [24] 1799 	lcall	__gptrget
      0005A2 F8               [12] 1800 	mov	r0,a
      0005A3 A3               [24] 1801 	inc	dptr
      0005A4 12r00r00         [24] 1802 	lcall	__gptrget
      0005A7 F9               [12] 1803 	mov	r1,a
      0005A8 A3               [24] 1804 	inc	dptr
      0005A9 12r00r00         [24] 1805 	lcall	__gptrget
      0005AC FF               [12] 1806 	mov	r7,a
      0005AD E5*0C            [12] 1807 	mov	a,_print_linefipacket_i_65537_79
      0005AF 28               [12] 1808 	add	a,r0
      0005B0 F8               [12] 1809 	mov	r0,a
      0005B1 E4               [12] 1810 	clr	a
      0005B2 39               [12] 1811 	addc	a,r1
      0005B3 F9               [12] 1812 	mov	r1,a
      0005B4 88 82            [24] 1813 	mov	dpl,r0
      0005B6 89 83            [24] 1814 	mov	dph,r1
      0005B8 8F F0            [24] 1815 	mov	b,r7
      0005BA 12r00r00         [24] 1816 	lcall	__gptrget
      0005BD F8               [12] 1817 	mov	r0,a
      0005BE 7F 00            [12] 1818 	mov	r7,#0x00
      0005C0 C0 07            [24] 1819 	push	ar7
      0005C2 C0 06            [24] 1820 	push	ar6
      0005C4 C0 05            [24] 1821 	push	ar5
      0005C6 C0 04            [24] 1822 	push	ar4
      0005C8 C0 03            [24] 1823 	push	ar3
      0005CA C0 02            [24] 1824 	push	ar2
      0005CC C0 00            [24] 1825 	push	ar0
      0005CE C0 07            [24] 1826 	push	ar7
      0005D0 74r6D            [12] 1827 	mov	a,#___str_7
      0005D2 C0 E0            [24] 1828 	push	acc
      0005D4 74s00            [12] 1829 	mov	a,#(___str_7 >> 8)
      0005D6 C0 E0            [24] 1830 	push	acc
      0005D8 12r00r00         [24] 1831 	lcall	_printf_fast_f
      0005DB E5 81            [12] 1832 	mov	a,sp
      0005DD 24 FC            [12] 1833 	add	a,#0xfc
      0005DF F5 81            [12] 1834 	mov	sp,a
      0005E1 D0 02            [24] 1835 	pop	ar2
      0005E3 D0 03            [24] 1836 	pop	ar3
      0005E5 D0 04            [24] 1837 	pop	ar4
      0005E7 D0 05            [24] 1838 	pop	ar5
      0005E9 D0 06            [24] 1839 	pop	ar6
      0005EB D0 07            [24] 1840 	pop	ar7
                                   1841 ;	../lib_master/linefi_packet.c:162: for (i=0;i<apstLineFiPkt->u8Size-5;i++) {
      0005ED 05*0C            [12] 1842 	inc	_print_linefipacket_i_65537_79
      0005EF D0 07            [24] 1843 	pop	ar7
      0005F1 D0 06            [24] 1844 	pop	ar6
      0005F3 D0 05            [24] 1845 	pop	ar5
      0005F5 02r05r62         [24] 1846 	ljmp	00103$
      0005F8                       1847 00101$:
                                   1848 ;	../lib_master/linefi_packet.c:165: printf_fast_f("\r\n");
      0005F8 74r73            [12] 1849 	mov	a,#___str_8
      0005FA C0 E0            [24] 1850 	push	acc
      0005FC 74s00            [12] 1851 	mov	a,#(___str_8 >> 8)
      0005FE C0 E0            [24] 1852 	push	acc
      000600 12r00r00         [24] 1853 	lcall	_printf_fast_f
      000603 15 81            [12] 1854 	dec	sp
      000605 15 81            [12] 1855 	dec	sp
                                   1856 ;	../lib_master/linefi_packet.c:166: printf_fast_f("-------------------------------\r\n");
      000607 74r00            [12] 1857 	mov	a,#___str_0
      000609 C0 E0            [24] 1858 	push	acc
      00060B 74s00            [12] 1859 	mov	a,#(___str_0 >> 8)
      00060D C0 E0            [24] 1860 	push	acc
      00060F 12r00r00         [24] 1861 	lcall	_printf_fast_f
      000612 15 81            [12] 1862 	dec	sp
      000614 15 81            [12] 1863 	dec	sp
                                   1864 ;	../lib_master/linefi_packet.c:167: }
      000616 22               [24] 1865 	ret
                                   1866 ;------------------------------------------------------------
                                   1867 ;Allocation info for local variables in function 'crc8'
                                   1868 ;------------------------------------------------------------
                                   1869 ;num_bytes                 Allocated with name '_crc8_PARM_2'
                                   1870 ;au8CRC                    Allocated with name '_crc8_PARM_3'
                                   1871 ;input_str                 Allocated to registers r5 r6 r7 
                                   1872 ;a                         Allocated to registers r3 
                                   1873 ;crc                       Allocated to registers r4 
                                   1874 ;ptr                       Allocated to registers r5 r6 r7 
                                   1875 ;------------------------------------------------------------
                                   1876 ;	../lib_master/linefi_packet.c:188: uint8 crc8( uint8 *input_str, uint8 num_bytes, uint8 au8CRC) 
                                   1877 ;	-----------------------------------------
                                   1878 ;	 function crc8
                                   1879 ;	-----------------------------------------
      000617                       1880 _crc8:
      000617 AD 82            [24] 1881 	mov	r5,dpl
      000619 AE 83            [24] 1882 	mov	r6,dph
      00061B AF F0            [24] 1883 	mov	r7,b
                                   1884 ;	../lib_master/linefi_packet.c:194: crc = au8CRC;
      00061D AC*01            [24] 1885 	mov	r4,_crc8_PARM_3
                                   1886 ;	../lib_master/linefi_packet.c:197: if ( ptr != NULL )
      00061F ED               [12] 1887 	mov	a,r5
      000620 4E               [12] 1888 	orl	a,r6
      000621 60 21            [24] 1889 	jz	00103$
                                   1890 ;	../lib_master/linefi_packet.c:198: for (a=0; a<num_bytes; a++) {
      000623 7B 00            [12] 1891 	mov	r3,#0x00
      000625                       1892 00105$:
      000625 C3               [12] 1893 	clr	c
      000626 EB               [12] 1894 	mov	a,r3
      000627 95*00            [12] 1895 	subb	a,_crc8_PARM_2
      000629 50 19            [24] 1896 	jnc	00103$
                                   1897 ;	../lib_master/linefi_packet.c:200: crc = sht75_crc_table[(*ptr++) ^ crc];
      00062B 8D 82            [24] 1898 	mov	dpl,r5
      00062D 8E 83            [24] 1899 	mov	dph,r6
      00062F 8F F0            [24] 1900 	mov	b,r7
      000631 12r00r00         [24] 1901 	lcall	__gptrget
      000634 FA               [12] 1902 	mov	r2,a
      000635 A3               [24] 1903 	inc	dptr
      000636 AD 82            [24] 1904 	mov	r5,dpl
      000638 AE 83            [24] 1905 	mov	r6,dph
      00063A EC               [12] 1906 	mov	a,r4
      00063B 6A               [12] 1907 	xrl	a,r2
      00063C 90r07r53         [24] 1908 	mov	dptr,#_sht75_crc_table
      00063F 93               [24] 1909 	movc	a,@a+dptr
      000640 FC               [12] 1910 	mov	r4,a
                                   1911 ;	../lib_master/linefi_packet.c:198: for (a=0; a<num_bytes; a++) {
      000641 0B               [12] 1912 	inc	r3
      000642 80 E1            [24] 1913 	sjmp	00105$
      000644                       1914 00103$:
                                   1915 ;	../lib_master/linefi_packet.c:203: return crc;
      000644 8C 82            [24] 1916 	mov	dpl,r4
                                   1917 ;	../lib_master/linefi_packet.c:204: }  /* crc_8 */
      000646 22               [24] 1918 	ret
                                   1919 ;------------------------------------------------------------
                                   1920 ;Allocation info for local variables in function 'print_raw_packet'
                                   1921 ;------------------------------------------------------------
                                   1922 ;apu8Data                  Allocated with name '_print_raw_packet_PARM_2'
                                   1923 ;au8Size                   Allocated to registers r7 
                                   1924 ;i                         Allocated to registers r6 
                                   1925 ;------------------------------------------------------------
                                   1926 ;	../lib_master/linefi_packet.c:206: void print_raw_packet(uint8 au8Size, uint8 * apu8Data)
                                   1927 ;	-----------------------------------------
                                   1928 ;	 function print_raw_packet
                                   1929 ;	-----------------------------------------
      000647                       1930 _print_raw_packet:
      000647 AF 82            [24] 1931 	mov	r7,dpl
                                   1932 ;	../lib_master/linefi_packet.c:209: printf_fast_f("#%d\r\n", gu16Cnt++);
      000649 AD*00            [24] 1933 	mov	r5,_gu16Cnt
      00064B AE*01            [24] 1934 	mov	r6,(_gu16Cnt + 1)
      00064D 05*00            [12] 1935 	inc	_gu16Cnt
      00064F E4               [12] 1936 	clr	a
      000650 B5*00 02         [24] 1937 	cjne	a,_gu16Cnt,00136$
      000653 05*01            [12] 1938 	inc	(_gu16Cnt + 1)
      000655                       1939 00136$:
      000655 C0 07            [24] 1940 	push	ar7
      000657 C0 05            [24] 1941 	push	ar5
      000659 C0 06            [24] 1942 	push	ar6
      00065B 74r76            [12] 1943 	mov	a,#___str_9
      00065D C0 E0            [24] 1944 	push	acc
      00065F 74s00            [12] 1945 	mov	a,#(___str_9 >> 8)
      000661 C0 E0            [24] 1946 	push	acc
      000663 12r00r00         [24] 1947 	lcall	_printf_fast_f
      000666 E5 81            [12] 1948 	mov	a,sp
      000668 24 FC            [12] 1949 	add	a,#0xfc
      00066A F5 81            [12] 1950 	mov	sp,a
                                   1951 ;	../lib_master/linefi_packet.c:210: printf_fast_f("raw :  ");
      00066C 74r7C            [12] 1952 	mov	a,#___str_10
      00066E C0 E0            [24] 1953 	push	acc
      000670 74s00            [12] 1954 	mov	a,#(___str_10 >> 8)
      000672 C0 E0            [24] 1955 	push	acc
      000674 12r00r00         [24] 1956 	lcall	_printf_fast_f
      000677 15 81            [12] 1957 	dec	sp
      000679 15 81            [12] 1958 	dec	sp
      00067B D0 07            [24] 1959 	pop	ar7
                                   1960 ;	../lib_master/linefi_packet.c:211: for (i=0;i<au8Size;i++) {
      00067D 7E 00            [12] 1961 	mov	r6,#0x00
      00067F                       1962 00107$:
      00067F C3               [12] 1963 	clr	c
      000680 EE               [12] 1964 	mov	a,r6
      000681 9F               [12] 1965 	subb	a,r7
      000682 50 24            [24] 1966 	jnc	00101$
                                   1967 ;	../lib_master/linefi_packet.c:212: printf_fast_f("%2d   ", i);
      000684 8E 04            [24] 1968 	mov	ar4,r6
      000686 7D 00            [12] 1969 	mov	r5,#0x00
      000688 C0 07            [24] 1970 	push	ar7
      00068A C0 06            [24] 1971 	push	ar6
      00068C C0 04            [24] 1972 	push	ar4
      00068E C0 05            [24] 1973 	push	ar5
      000690 74r84            [12] 1974 	mov	a,#___str_11
      000692 C0 E0            [24] 1975 	push	acc
      000694 74s00            [12] 1976 	mov	a,#(___str_11 >> 8)
      000696 C0 E0            [24] 1977 	push	acc
      000698 12r00r00         [24] 1978 	lcall	_printf_fast_f
      00069B E5 81            [12] 1979 	mov	a,sp
      00069D 24 FC            [12] 1980 	add	a,#0xfc
      00069F F5 81            [12] 1981 	mov	sp,a
      0006A1 D0 06            [24] 1982 	pop	ar6
      0006A3 D0 07            [24] 1983 	pop	ar7
                                   1984 ;	../lib_master/linefi_packet.c:211: for (i=0;i<au8Size;i++) {
      0006A5 0E               [12] 1985 	inc	r6
      0006A6 80 D7            [24] 1986 	sjmp	00107$
      0006A8                       1987 00101$:
                                   1988 ;	../lib_master/linefi_packet.c:214: printf_fast_f("\r\n");
      0006A8 C0 07            [24] 1989 	push	ar7
      0006AA 74r73            [12] 1990 	mov	a,#___str_8
      0006AC C0 E0            [24] 1991 	push	acc
      0006AE 74s00            [12] 1992 	mov	a,#(___str_8 >> 8)
      0006B0 C0 E0            [24] 1993 	push	acc
      0006B2 12r00r00         [24] 1994 	lcall	_printf_fast_f
      0006B5 15 81            [12] 1995 	dec	sp
      0006B7 15 81            [12] 1996 	dec	sp
                                   1997 ;	../lib_master/linefi_packet.c:215: printf_fast_f("data:");
      0006B9 74r8B            [12] 1998 	mov	a,#___str_12
      0006BB C0 E0            [24] 1999 	push	acc
      0006BD 74s00            [12] 2000 	mov	a,#(___str_12 >> 8)
      0006BF C0 E0            [24] 2001 	push	acc
      0006C1 12r00r00         [24] 2002 	lcall	_printf_fast_f
      0006C4 15 81            [12] 2003 	dec	sp
      0006C6 15 81            [12] 2004 	dec	sp
      0006C8 D0 07            [24] 2005 	pop	ar7
                                   2006 ;	../lib_master/linefi_packet.c:216: for (i=0;i<au8Size;i++) {
      0006CA 7E 00            [12] 2007 	mov	r6,#0x00
      0006CC                       2008 00110$:
      0006CC C3               [12] 2009 	clr	c
      0006CD EE               [12] 2010 	mov	a,r6
      0006CE 9F               [12] 2011 	subb	a,r7
      0006CF 50 72            [24] 2012 	jnc	00105$
                                   2013 ;	../lib_master/linefi_packet.c:217: if (*apu8Data < 0x10) {
      0006D1 AB*0D            [24] 2014 	mov	r3,_print_raw_packet_PARM_2
      0006D3 AC*0E            [24] 2015 	mov	r4,(_print_raw_packet_PARM_2 + 1)
      0006D5 AD*0F            [24] 2016 	mov	r5,(_print_raw_packet_PARM_2 + 2)
      0006D7 8B 82            [24] 2017 	mov	dpl,r3
      0006D9 8C 83            [24] 2018 	mov	dph,r4
      0006DB 8D F0            [24] 2019 	mov	b,r5
      0006DD 12r00r00         [24] 2020 	lcall	__gptrget
      0006E0 FA               [12] 2021 	mov	r2,a
      0006E1 BA 10 00         [24] 2022 	cjne	r2,#0x10,00139$
      0006E4                       2023 00139$:
      0006E4 50 30            [24] 2024 	jnc	00103$
                                   2025 ;	../lib_master/linefi_packet.c:218: printf_fast_f("0x0%x ", *apu8Data++);
      0006E6 8A 01            [24] 2026 	mov	ar1,r2
      0006E8 74 01            [12] 2027 	mov	a,#0x01
      0006EA 2B               [12] 2028 	add	a,r3
      0006EB F5*0D            [12] 2029 	mov	_print_raw_packet_PARM_2,a
      0006ED E4               [12] 2030 	clr	a
      0006EE 3C               [12] 2031 	addc	a,r4
      0006EF F5*0E            [12] 2032 	mov	(_print_raw_packet_PARM_2 + 1),a
      0006F1 8D*0F            [24] 2033 	mov	(_print_raw_packet_PARM_2 + 2),r5
      0006F3 89 00            [24] 2034 	mov	ar0,r1
      0006F5 79 00            [12] 2035 	mov	r1,#0x00
      0006F7 C0 07            [24] 2036 	push	ar7
      0006F9 C0 06            [24] 2037 	push	ar6
      0006FB C0 00            [24] 2038 	push	ar0
      0006FD C0 01            [24] 2039 	push	ar1
      0006FF 74r91            [12] 2040 	mov	a,#___str_13
      000701 C0 E0            [24] 2041 	push	acc
      000703 74s00            [12] 2042 	mov	a,#(___str_13 >> 8)
      000705 C0 E0            [24] 2043 	push	acc
      000707 12r00r00         [24] 2044 	lcall	_printf_fast_f
      00070A E5 81            [12] 2045 	mov	a,sp
      00070C 24 FC            [12] 2046 	add	a,#0xfc
      00070E F5 81            [12] 2047 	mov	sp,a
      000710 D0 06            [24] 2048 	pop	ar6
      000712 D0 07            [24] 2049 	pop	ar7
      000714 80 2A            [24] 2050 	sjmp	00111$
      000716                       2051 00103$:
                                   2052 ;	../lib_master/linefi_packet.c:221: printf_fast_f("0x%x ", *apu8Data++);
      000716 74 01            [12] 2053 	mov	a,#0x01
      000718 2B               [12] 2054 	add	a,r3
      000719 F5*0D            [12] 2055 	mov	_print_raw_packet_PARM_2,a
      00071B E4               [12] 2056 	clr	a
      00071C 3C               [12] 2057 	addc	a,r4
      00071D F5*0E            [12] 2058 	mov	(_print_raw_packet_PARM_2 + 1),a
      00071F 8D*0F            [24] 2059 	mov	(_print_raw_packet_PARM_2 + 2),r5
      000721 7D 00            [12] 2060 	mov	r5,#0x00
      000723 C0 07            [24] 2061 	push	ar7
      000725 C0 06            [24] 2062 	push	ar6
      000727 C0 02            [24] 2063 	push	ar2
      000729 C0 05            [24] 2064 	push	ar5
      00072B 74r6D            [12] 2065 	mov	a,#___str_7
      00072D C0 E0            [24] 2066 	push	acc
      00072F 74s00            [12] 2067 	mov	a,#(___str_7 >> 8)
      000731 C0 E0            [24] 2068 	push	acc
      000733 12r00r00         [24] 2069 	lcall	_printf_fast_f
      000736 E5 81            [12] 2070 	mov	a,sp
      000738 24 FC            [12] 2071 	add	a,#0xfc
      00073A F5 81            [12] 2072 	mov	sp,a
      00073C D0 06            [24] 2073 	pop	ar6
      00073E D0 07            [24] 2074 	pop	ar7
      000740                       2075 00111$:
                                   2076 ;	../lib_master/linefi_packet.c:216: for (i=0;i<au8Size;i++) {
      000740 0E               [12] 2077 	inc	r6
      000741 80 89            [24] 2078 	sjmp	00110$
      000743                       2079 00105$:
                                   2080 ;	../lib_master/linefi_packet.c:224: printf_fast_f("\r\n");
      000743 74r73            [12] 2081 	mov	a,#___str_8
      000745 C0 E0            [24] 2082 	push	acc
      000747 74s00            [12] 2083 	mov	a,#(___str_8 >> 8)
      000749 C0 E0            [24] 2084 	push	acc
      00074B 12r00r00         [24] 2085 	lcall	_printf_fast_f
      00074E 15 81            [12] 2086 	dec	sp
      000750 15 81            [12] 2087 	dec	sp
                                   2088 ;	../lib_master/linefi_packet.c:225: }
      000752 22               [24] 2089 	ret
                                   2090 	.area CSEG    (CODE)
                                   2091 	.area CONST   (CODE)
                                   2092 	.area CONST   (CODE)
      000000                       2093 ___str_0:
      000000 2D 2D 2D 2D 2D 2D 2D  2094 	.ascii "-------------------------------"
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D
      00001F 0D                    2095 	.db 0x0d
      000020 0A                    2096 	.db 0x0a
      000021 00                    2097 	.db 0x00
                                   2098 	.area CSEG    (CODE)
                                   2099 	.area CONST   (CODE)
      000022                       2100 ___str_1:
      000022 56 65 72 20 3A 20 25  2101 	.ascii "Ver : %d"
             64
      00002A 0D                    2102 	.db 0x0d
      00002B 0A                    2103 	.db 0x0a
      00002C 00                    2104 	.db 0x00
                                   2105 	.area CSEG    (CODE)
                                   2106 	.area CONST   (CODE)
      00002D                       2107 ___str_2:
      00002D 54 79 70 65 3A 20 25  2108 	.ascii "Type: %d(%s)"
             64 28 25 73 29
      000039 0D                    2109 	.db 0x0d
      00003A 0A                    2110 	.db 0x0a
      00003B 00                    2111 	.db 0x00
                                   2112 	.area CSEG    (CODE)
                                   2113 	.area CONST   (CODE)
      00003C                       2114 ___str_3:
      00003C 41 64 64 72 3A 20 25  2115 	.ascii "Addr: %d"
             64
      000044 0D                    2116 	.db 0x0d
      000045 0A                    2117 	.db 0x0a
      000046 00                    2118 	.db 0x00
                                   2119 	.area CSEG    (CODE)
                                   2120 	.area CONST   (CODE)
      000047                       2121 ___str_4:
      000047 53 69 7A 65 3A 20 25  2122 	.ascii "Size: %d"
             64
      00004F 0D                    2123 	.db 0x0d
      000050 0A                    2124 	.db 0x0a
      000051 00                    2125 	.db 0x00
                                   2126 	.area CSEG    (CODE)
                                   2127 	.area CONST   (CODE)
      000052                       2128 ___str_5:
      000052 43 52 43 20 63 6F 6D  2129 	.ascii "CRC comp : %d %d "
             70 20 3A 20 25 64 20
             25 64 20
      000063 0D                    2130 	.db 0x0d
      000064 0A                    2131 	.db 0x0a
      000065 00                    2132 	.db 0x00
                                   2133 	.area CSEG    (CODE)
                                   2134 	.area CONST   (CODE)
      000066                       2135 ___str_6:
      000066 44 41 54 41 3A 20     2136 	.ascii "DATA: "
      00006C 00                    2137 	.db 0x00
                                   2138 	.area CSEG    (CODE)
                                   2139 	.area CONST   (CODE)
      00006D                       2140 ___str_7:
      00006D 30 78 25 78 20        2141 	.ascii "0x%x "
      000072 00                    2142 	.db 0x00
                                   2143 	.area CSEG    (CODE)
                                   2144 	.area CONST   (CODE)
      000073                       2145 ___str_8:
      000073 0D                    2146 	.db 0x0d
      000074 0A                    2147 	.db 0x0a
      000075 00                    2148 	.db 0x00
                                   2149 	.area CSEG    (CODE)
      000753                       2150 _sht75_crc_table:
      000753 00                    2151 	.db #0x00	; 0
      000754 31                    2152 	.db #0x31	; 49	'1'
      000755 62                    2153 	.db #0x62	; 98	'b'
      000756 53                    2154 	.db #0x53	; 83	'S'
      000757 C4                    2155 	.db #0xc4	; 196
      000758 F5                    2156 	.db #0xf5	; 245
      000759 A6                    2157 	.db #0xa6	; 166
      00075A 97                    2158 	.db #0x97	; 151
      00075B B9                    2159 	.db #0xb9	; 185
      00075C 88                    2160 	.db #0x88	; 136
      00075D DB                    2161 	.db #0xdb	; 219
      00075E EA                    2162 	.db #0xea	; 234
      00075F 7D                    2163 	.db #0x7d	; 125
      000760 4C                    2164 	.db #0x4c	; 76	'L'
      000761 1F                    2165 	.db #0x1f	; 31
      000762 2E                    2166 	.db #0x2e	; 46
      000763 43                    2167 	.db #0x43	; 67	'C'
      000764 72                    2168 	.db #0x72	; 114	'r'
      000765 21                    2169 	.db #0x21	; 33
      000766 10                    2170 	.db #0x10	; 16
      000767 87                    2171 	.db #0x87	; 135
      000768 B6                    2172 	.db #0xb6	; 182
      000769 E5                    2173 	.db #0xe5	; 229
      00076A D4                    2174 	.db #0xd4	; 212
      00076B FA                    2175 	.db #0xfa	; 250
      00076C CB                    2176 	.db #0xcb	; 203
      00076D 98                    2177 	.db #0x98	; 152
      00076E A9                    2178 	.db #0xa9	; 169
      00076F 3E                    2179 	.db #0x3e	; 62
      000770 0F                    2180 	.db #0x0f	; 15
      000771 5C                    2181 	.db #0x5c	; 92
      000772 6D                    2182 	.db #0x6d	; 109	'm'
      000773 86                    2183 	.db #0x86	; 134
      000774 B7                    2184 	.db #0xb7	; 183
      000775 E4                    2185 	.db #0xe4	; 228
      000776 D5                    2186 	.db #0xd5	; 213
      000777 42                    2187 	.db #0x42	; 66	'B'
      000778 73                    2188 	.db #0x73	; 115	's'
      000779 20                    2189 	.db #0x20	; 32
      00077A 11                    2190 	.db #0x11	; 17
      00077B 3F                    2191 	.db #0x3f	; 63
      00077C 0E                    2192 	.db #0x0e	; 14
      00077D 5D                    2193 	.db #0x5d	; 93
      00077E 6C                    2194 	.db #0x6c	; 108	'l'
      00077F FB                    2195 	.db #0xfb	; 251
      000780 CA                    2196 	.db #0xca	; 202
      000781 99                    2197 	.db #0x99	; 153
      000782 A8                    2198 	.db #0xa8	; 168
      000783 C5                    2199 	.db #0xc5	; 197
      000784 F4                    2200 	.db #0xf4	; 244
      000785 A7                    2201 	.db #0xa7	; 167
      000786 96                    2202 	.db #0x96	; 150
      000787 01                    2203 	.db #0x01	; 1
      000788 30                    2204 	.db #0x30	; 48	'0'
      000789 63                    2205 	.db #0x63	; 99	'c'
      00078A 52                    2206 	.db #0x52	; 82	'R'
      00078B 7C                    2207 	.db #0x7c	; 124
      00078C 4D                    2208 	.db #0x4d	; 77	'M'
      00078D 1E                    2209 	.db #0x1e	; 30
      00078E 2F                    2210 	.db #0x2f	; 47
      00078F B8                    2211 	.db #0xb8	; 184
      000790 89                    2212 	.db #0x89	; 137
      000791 DA                    2213 	.db #0xda	; 218
      000792 EB                    2214 	.db #0xeb	; 235
      000793 3D                    2215 	.db #0x3d	; 61
      000794 0C                    2216 	.db #0x0c	; 12
      000795 5F                    2217 	.db #0x5f	; 95
      000796 6E                    2218 	.db #0x6e	; 110	'n'
      000797 F9                    2219 	.db #0xf9	; 249
      000798 C8                    2220 	.db #0xc8	; 200
      000799 9B                    2221 	.db #0x9b	; 155
      00079A AA                    2222 	.db #0xaa	; 170
      00079B 84                    2223 	.db #0x84	; 132
      00079C B5                    2224 	.db #0xb5	; 181
      00079D E6                    2225 	.db #0xe6	; 230
      00079E D7                    2226 	.db #0xd7	; 215
      00079F 40                    2227 	.db #0x40	; 64
      0007A0 71                    2228 	.db #0x71	; 113	'q'
      0007A1 22                    2229 	.db #0x22	; 34
      0007A2 13                    2230 	.db #0x13	; 19
      0007A3 7E                    2231 	.db #0x7e	; 126
      0007A4 4F                    2232 	.db #0x4f	; 79	'O'
      0007A5 1C                    2233 	.db #0x1c	; 28
      0007A6 2D                    2234 	.db #0x2d	; 45
      0007A7 BA                    2235 	.db #0xba	; 186
      0007A8 8B                    2236 	.db #0x8b	; 139
      0007A9 D8                    2237 	.db #0xd8	; 216
      0007AA E9                    2238 	.db #0xe9	; 233
      0007AB C7                    2239 	.db #0xc7	; 199
      0007AC F6                    2240 	.db #0xf6	; 246
      0007AD A5                    2241 	.db #0xa5	; 165
      0007AE 94                    2242 	.db #0x94	; 148
      0007AF 03                    2243 	.db #0x03	; 3
      0007B0 32                    2244 	.db #0x32	; 50	'2'
      0007B1 61                    2245 	.db #0x61	; 97	'a'
      0007B2 50                    2246 	.db #0x50	; 80	'P'
      0007B3 BB                    2247 	.db #0xbb	; 187
      0007B4 8A                    2248 	.db #0x8a	; 138
      0007B5 D9                    2249 	.db #0xd9	; 217
      0007B6 E8                    2250 	.db #0xe8	; 232
      0007B7 7F                    2251 	.db #0x7f	; 127
      0007B8 4E                    2252 	.db #0x4e	; 78	'N'
      0007B9 1D                    2253 	.db #0x1d	; 29
      0007BA 2C                    2254 	.db #0x2c	; 44
      0007BB 02                    2255 	.db #0x02	; 2
      0007BC 33                    2256 	.db #0x33	; 51	'3'
      0007BD 60                    2257 	.db #0x60	; 96
      0007BE 51                    2258 	.db #0x51	; 81	'Q'
      0007BF C6                    2259 	.db #0xc6	; 198
      0007C0 F7                    2260 	.db #0xf7	; 247
      0007C1 A4                    2261 	.db #0xa4	; 164
      0007C2 95                    2262 	.db #0x95	; 149
      0007C3 F8                    2263 	.db #0xf8	; 248
      0007C4 C9                    2264 	.db #0xc9	; 201
      0007C5 9A                    2265 	.db #0x9a	; 154
      0007C6 AB                    2266 	.db #0xab	; 171
      0007C7 3C                    2267 	.db #0x3c	; 60
      0007C8 0D                    2268 	.db #0x0d	; 13
      0007C9 5E                    2269 	.db #0x5e	; 94
      0007CA 6F                    2270 	.db #0x6f	; 111	'o'
      0007CB 41                    2271 	.db #0x41	; 65	'A'
      0007CC 70                    2272 	.db #0x70	; 112	'p'
      0007CD 23                    2273 	.db #0x23	; 35
      0007CE 12                    2274 	.db #0x12	; 18
      0007CF 85                    2275 	.db #0x85	; 133
      0007D0 B4                    2276 	.db #0xb4	; 180
      0007D1 E7                    2277 	.db #0xe7	; 231
      0007D2 D6                    2278 	.db #0xd6	; 214
      0007D3 7A                    2279 	.db #0x7a	; 122	'z'
      0007D4 4B                    2280 	.db #0x4b	; 75	'K'
      0007D5 18                    2281 	.db #0x18	; 24
      0007D6 29                    2282 	.db #0x29	; 41
      0007D7 BE                    2283 	.db #0xbe	; 190
      0007D8 8F                    2284 	.db #0x8f	; 143
      0007D9 DC                    2285 	.db #0xdc	; 220
      0007DA ED                    2286 	.db #0xed	; 237
      0007DB C3                    2287 	.db #0xc3	; 195
      0007DC F2                    2288 	.db #0xf2	; 242
      0007DD A1                    2289 	.db #0xa1	; 161
      0007DE 90                    2290 	.db #0x90	; 144
      0007DF 07                    2291 	.db #0x07	; 7
      0007E0 36                    2292 	.db #0x36	; 54	'6'
      0007E1 65                    2293 	.db #0x65	; 101	'e'
      0007E2 54                    2294 	.db #0x54	; 84	'T'
      0007E3 39                    2295 	.db #0x39	; 57	'9'
      0007E4 08                    2296 	.db #0x08	; 8
      0007E5 5B                    2297 	.db #0x5b	; 91
      0007E6 6A                    2298 	.db #0x6a	; 106	'j'
      0007E7 FD                    2299 	.db #0xfd	; 253
      0007E8 CC                    2300 	.db #0xcc	; 204
      0007E9 9F                    2301 	.db #0x9f	; 159
      0007EA AE                    2302 	.db #0xae	; 174
      0007EB 80                    2303 	.db #0x80	; 128
      0007EC B1                    2304 	.db #0xb1	; 177
      0007ED E2                    2305 	.db #0xe2	; 226
      0007EE D3                    2306 	.db #0xd3	; 211
      0007EF 44                    2307 	.db #0x44	; 68	'D'
      0007F0 75                    2308 	.db #0x75	; 117	'u'
      0007F1 26                    2309 	.db #0x26	; 38
      0007F2 17                    2310 	.db #0x17	; 23
      0007F3 FC                    2311 	.db #0xfc	; 252
      0007F4 CD                    2312 	.db #0xcd	; 205
      0007F5 9E                    2313 	.db #0x9e	; 158
      0007F6 AF                    2314 	.db #0xaf	; 175
      0007F7 38                    2315 	.db #0x38	; 56	'8'
      0007F8 09                    2316 	.db #0x09	; 9
      0007F9 5A                    2317 	.db #0x5a	; 90	'Z'
      0007FA 6B                    2318 	.db #0x6b	; 107	'k'
      0007FB 45                    2319 	.db #0x45	; 69	'E'
      0007FC 74                    2320 	.db #0x74	; 116	't'
      0007FD 27                    2321 	.db #0x27	; 39
      0007FE 16                    2322 	.db #0x16	; 22
      0007FF 81                    2323 	.db #0x81	; 129
      000800 B0                    2324 	.db #0xb0	; 176
      000801 E3                    2325 	.db #0xe3	; 227
      000802 D2                    2326 	.db #0xd2	; 210
      000803 BF                    2327 	.db #0xbf	; 191
      000804 8E                    2328 	.db #0x8e	; 142
      000805 DD                    2329 	.db #0xdd	; 221
      000806 EC                    2330 	.db #0xec	; 236
      000807 7B                    2331 	.db #0x7b	; 123
      000808 4A                    2332 	.db #0x4a	; 74	'J'
      000809 19                    2333 	.db #0x19	; 25
      00080A 28                    2334 	.db #0x28	; 40
      00080B 06                    2335 	.db #0x06	; 6
      00080C 37                    2336 	.db #0x37	; 55	'7'
      00080D 64                    2337 	.db #0x64	; 100	'd'
      00080E 55                    2338 	.db #0x55	; 85	'U'
      00080F C2                    2339 	.db #0xc2	; 194
      000810 F3                    2340 	.db #0xf3	; 243
      000811 A0                    2341 	.db #0xa0	; 160
      000812 91                    2342 	.db #0x91	; 145
      000813 47                    2343 	.db #0x47	; 71	'G'
      000814 76                    2344 	.db #0x76	; 118	'v'
      000815 25                    2345 	.db #0x25	; 37
      000816 14                    2346 	.db #0x14	; 20
      000817 83                    2347 	.db #0x83	; 131
      000818 B2                    2348 	.db #0xb2	; 178
      000819 E1                    2349 	.db #0xe1	; 225
      00081A D0                    2350 	.db #0xd0	; 208
      00081B FE                    2351 	.db #0xfe	; 254
      00081C CF                    2352 	.db #0xcf	; 207
      00081D 9C                    2353 	.db #0x9c	; 156
      00081E AD                    2354 	.db #0xad	; 173
      00081F 3A                    2355 	.db #0x3a	; 58
      000820 0B                    2356 	.db #0x0b	; 11
      000821 58                    2357 	.db #0x58	; 88	'X'
      000822 69                    2358 	.db #0x69	; 105	'i'
      000823 04                    2359 	.db #0x04	; 4
      000824 35                    2360 	.db #0x35	; 53	'5'
      000825 66                    2361 	.db #0x66	; 102	'f'
      000826 57                    2362 	.db #0x57	; 87	'W'
      000827 C0                    2363 	.db #0xc0	; 192
      000828 F1                    2364 	.db #0xf1	; 241
      000829 A2                    2365 	.db #0xa2	; 162
      00082A 93                    2366 	.db #0x93	; 147
      00082B BD                    2367 	.db #0xbd	; 189
      00082C 8C                    2368 	.db #0x8c	; 140
      00082D DF                    2369 	.db #0xdf	; 223
      00082E EE                    2370 	.db #0xee	; 238
      00082F 79                    2371 	.db #0x79	; 121	'y'
      000830 48                    2372 	.db #0x48	; 72	'H'
      000831 1B                    2373 	.db #0x1b	; 27
      000832 2A                    2374 	.db #0x2a	; 42
      000833 C1                    2375 	.db #0xc1	; 193
      000834 F0                    2376 	.db #0xf0	; 240
      000835 A3                    2377 	.db #0xa3	; 163
      000836 92                    2378 	.db #0x92	; 146
      000837 05                    2379 	.db #0x05	; 5
      000838 34                    2380 	.db #0x34	; 52	'4'
      000839 67                    2381 	.db #0x67	; 103	'g'
      00083A 56                    2382 	.db #0x56	; 86	'V'
      00083B 78                    2383 	.db #0x78	; 120	'x'
      00083C 49                    2384 	.db #0x49	; 73	'I'
      00083D 1A                    2385 	.db #0x1a	; 26
      00083E 2B                    2386 	.db #0x2b	; 43
      00083F BC                    2387 	.db #0xbc	; 188
      000840 8D                    2388 	.db #0x8d	; 141
      000841 DE                    2389 	.db #0xde	; 222
      000842 EF                    2390 	.db #0xef	; 239
      000843 82                    2391 	.db #0x82	; 130
      000844 B3                    2392 	.db #0xb3	; 179
      000845 E0                    2393 	.db #0xe0	; 224
      000846 D1                    2394 	.db #0xd1	; 209
      000847 46                    2395 	.db #0x46	; 70	'F'
      000848 77                    2396 	.db #0x77	; 119	'w'
      000849 24                    2397 	.db #0x24	; 36
      00084A 15                    2398 	.db #0x15	; 21
      00084B 3B                    2399 	.db #0x3b	; 59
      00084C 0A                    2400 	.db #0x0a	; 10
      00084D 59                    2401 	.db #0x59	; 89	'Y'
      00084E 68                    2402 	.db #0x68	; 104	'h'
      00084F FF                    2403 	.db #0xff	; 255
      000850 CE                    2404 	.db #0xce	; 206
      000851 9D                    2405 	.db #0x9d	; 157
      000852 AC                    2406 	.db #0xac	; 172
                                   2407 	.area CONST   (CODE)
      000076                       2408 ___str_9:
      000076 23 25 64              2409 	.ascii "#%d"
      000079 0D                    2410 	.db 0x0d
      00007A 0A                    2411 	.db 0x0a
      00007B 00                    2412 	.db 0x00
                                   2413 	.area CSEG    (CODE)
                                   2414 	.area CONST   (CODE)
      00007C                       2415 ___str_10:
      00007C 72 61 77 20 3A 20 20  2416 	.ascii "raw :  "
      000083 00                    2417 	.db 0x00
                                   2418 	.area CSEG    (CODE)
                                   2419 	.area CONST   (CODE)
      000084                       2420 ___str_11:
      000084 25 32 64 20 20 20     2421 	.ascii "%2d   "
      00008A 00                    2422 	.db 0x00
                                   2423 	.area CSEG    (CODE)
                                   2424 	.area CONST   (CODE)
      00008B                       2425 ___str_12:
      00008B 64 61 74 61 3A        2426 	.ascii "data:"
      000090 00                    2427 	.db 0x00
                                   2428 	.area CSEG    (CODE)
                                   2429 	.area CONST   (CODE)
      000091                       2430 ___str_13:
      000091 30 78 30 25 78 20     2431 	.ascii "0x0%x "
      000097 00                    2432 	.db 0x00
                                   2433 	.area CSEG    (CODE)
                                   2434 	.area CONST   (CODE)
      000098                       2435 ___str_14:
      000098 54 79 70 65 5F 42 63  2436 	.ascii "Type_Bcast"
             61 73 74
      0000A2 00                    2437 	.db 0x00
                                   2438 	.area CSEG    (CODE)
                                   2439 	.area CONST   (CODE)
      0000A3                       2440 ___str_15:
      0000A3 54 79 70 65 5F 55 63  2441 	.ascii "Type_Ucast"
             61 73 74
      0000AD 00                    2442 	.db 0x00
                                   2443 	.area CSEG    (CODE)
                                   2444 	.area CONST   (CODE)
      0000AE                       2445 ___str_16:
      0000AE 54 79 70 65 5F 4D 63  2446 	.ascii "Type_Mcast"
             61 73 74
      0000B8 00                    2447 	.db 0x00
                                   2448 	.area CSEG    (CODE)
                                   2449 	.area CONST   (CODE)
      0000B9                       2450 ___str_17:
      0000B9 54 79 70 65 5F 53 65  2451 	.ascii "Type_SetAddr"
             74 41 64 64 72
      0000C5 00                    2452 	.db 0x00
                                   2453 	.area CSEG    (CODE)
                                   2454 	.area CONST   (CODE)
      0000C6                       2455 ___str_18:
      0000C6 54 79 70 65 5F 53 65  2456 	.ascii "Type_SetLED"
             74 4C 45 44
      0000D1 00                    2457 	.db 0x00
                                   2458 	.area CSEG    (CODE)
                                   2459 	.area CONST   (CODE)
      0000D2                       2460 ___str_19:
      0000D2 54 79 70 65 5F 43 74  2461 	.ascii "Type_CtrlMotor"
             72 6C 4D 6F 74 6F 72
      0000E0 00                    2462 	.db 0x00
                                   2463 	.area CSEG    (CODE)
                                   2464 	.area CONST   (CODE)
      0000E1                       2465 ___str_20:
      0000E1 54 79 70 65 5F 52 65  2466 	.ascii "Type_ReadAddr"
             61 64 41 64 64 72
      0000EE 00                    2467 	.db 0x00
                                   2468 	.area CSEG    (CODE)
                                   2469 	.area CONST   (CODE)
      0000EF                       2470 ___str_21:
      0000EF 54 79 70 65 5F 41 43  2471 	.ascii "Type_ACK"
             4B
      0000F7 00                    2472 	.db 0x00
                                   2473 	.area CSEG    (CODE)
                                   2474 	.area CONST   (CODE)
      0000F8                       2475 ___str_22:
      0000F8 54 79 70 65 5F 4E 6F  2476 	.ascii "Type_None"
             6E 65
      000101 00                    2477 	.db 0x00
                                   2478 	.area CSEG    (CODE)
                                   2479 	.area CABS    (ABS,CODE)
